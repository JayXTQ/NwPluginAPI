### YamlMime:ManagedReference
items:
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent
  commentId: T:PluginAPI.Events.ConsoleCommandExecutedEvent
  id: ConsoleCommandExecutedEvent
  parent: PluginAPI.Events
  children:
  - PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor(CommandSystem.ICommandSender,System.String,System.String[],System.Boolean,System.String)
  - PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
  - PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
  - PluginAPI.Events.ConsoleCommandExecutedEvent.Command
  - PluginAPI.Events.ConsoleCommandExecutedEvent.Response
  - PluginAPI.Events.ConsoleCommandExecutedEvent.Result
  - PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
  langs:
  - csharp
  - vb
  name: ConsoleCommandExecutedEvent
  nameWithType: ConsoleCommandExecutedEvent
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent
  type: Class
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: ConsoleCommandExecutedEvent
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 31
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: 'public class ConsoleCommandExecutedEvent : IEventArguments'
    content.vb: >-
      Public Class ConsoleCommandExecutedEvent
          Implements IEventArguments
  inheritance:
  - System.Object
  implements:
  - PluginAPI.Events.IEventArguments
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
  id: BaseType
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: BaseType
  nameWithType: ConsoleCommandExecutedEvent.BaseType
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BaseType
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 33
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public ServerEventType BaseType { get; }
    parameters: []
    return:
      type: PluginAPI.Enums.ServerEventType
    content.vb: Public ReadOnly Property BaseType As ServerEventType
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType*
  implements:
  - PluginAPI.Events.IEventArguments.BaseType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
  id: Sender
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: Sender
  nameWithType: ConsoleCommandExecutedEvent.Sender
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Sender
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 34
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public ICommandSender Sender { get; }
    parameters: []
    return:
      type: CommandSystem.ICommandSender
    content.vb: Public ReadOnly Property Sender As ICommandSender
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.Sender*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Command
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.Command
  id: Command
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: Command
  nameWithType: ConsoleCommandExecutedEvent.Command
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Command
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Command
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 36
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public string Command { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Command As String
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.Command*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
  id: Arguments
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: ConsoleCommandExecutedEvent.Arguments
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Arguments
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 38
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public string[] Arguments { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property Arguments As String()
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Result
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.Result
  id: Result
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: ConsoleCommandExecutedEvent.Result
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Result
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Result
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 40
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public bool Result { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Result As Boolean
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Response
  commentId: P:PluginAPI.Events.ConsoleCommandExecutedEvent.Response
  id: Response
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: Response
  nameWithType: ConsoleCommandExecutedEvent.Response
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Response
  type: Property
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Response
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 42
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public string Response { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Response As String
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.Response*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor(CommandSystem.ICommandSender,System.String,System.String[],System.Boolean,System.String)
  commentId: M:PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor(CommandSystem.ICommandSender,System.String,System.String[],System.Boolean,System.String)
  id: '#ctor(CommandSystem.ICommandSender,System.String,System.String[],System.Boolean,System.String)'
  parent: PluginAPI.Events.ConsoleCommandExecutedEvent
  langs:
  - csharp
  - vb
  name: ConsoleCommandExecutedEvent(ICommandSender, String, String[], Boolean, String)
  nameWithType: ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent(ICommandSender, String, String[], Boolean, String)
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent(CommandSystem.ICommandSender, System.String, System.String[], System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Events/Args/ConsoleCommandExecutedEvent.cs
    startLine: 45
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Events
  syntax:
    content: public ConsoleCommandExecutedEvent(ICommandSender sender, string command, string[] args, bool result, string response)
    parameters:
    - id: sender
      type: CommandSystem.ICommandSender
    - id: command
      type: System.String
    - id: args
      type: System.String[]
    - id: result
      type: System.Boolean
    - id: response
      type: System.String
    content.vb: Public Sub New(sender As ICommandSender, command As String, args As String(), result As Boolean, response As String)
  overload: PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor*
  nameWithType.vb: ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent(ICommandSender, String, String(), Boolean, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: PluginAPI.Events.ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent(CommandSystem.ICommandSender, System.String, System.String(), System.Boolean, System.String)
  name.vb: ConsoleCommandExecutedEvent(ICommandSender, String, String(), Boolean, String)
references:
- uid: PluginAPI.Events
  commentId: N:PluginAPI.Events
  name: PluginAPI.Events
  nameWithType: PluginAPI.Events
  fullName: PluginAPI.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PluginAPI.Events.IEventArguments
  commentId: T:PluginAPI.Events.IEventArguments
  parent: PluginAPI.Events
  name: IEventArguments
  nameWithType: IEventArguments
  fullName: PluginAPI.Events.IEventArguments
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
  name: BaseType
  nameWithType: ConsoleCommandExecutedEvent.BaseType
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.BaseType
- uid: PluginAPI.Events.IEventArguments.BaseType
  commentId: P:PluginAPI.Events.IEventArguments.BaseType
  parent: PluginAPI.Events.IEventArguments
  name: BaseType
  nameWithType: IEventArguments.BaseType
  fullName: PluginAPI.Events.IEventArguments.BaseType
- uid: PluginAPI.Enums.ServerEventType
  commentId: T:PluginAPI.Enums.ServerEventType
  parent: PluginAPI.Enums
  name: ServerEventType
  nameWithType: ServerEventType
  fullName: PluginAPI.Enums.ServerEventType
- uid: PluginAPI.Enums
  commentId: N:PluginAPI.Enums
  name: PluginAPI.Enums
  nameWithType: PluginAPI.Enums
  fullName: PluginAPI.Enums
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Sender*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
  name: Sender
  nameWithType: ConsoleCommandExecutedEvent.Sender
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Sender
- uid: CommandSystem.ICommandSender
  commentId: T:CommandSystem.ICommandSender
  parent: CommandSystem
  isExternal: true
  name: ICommandSender
  nameWithType: ICommandSender
  fullName: CommandSystem.ICommandSender
- uid: CommandSystem
  commentId: N:CommandSystem
  isExternal: true
  name: CommandSystem
  nameWithType: CommandSystem
  fullName: CommandSystem
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Command*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.Command
  name: Command
  nameWithType: ConsoleCommandExecutedEvent.Command
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Command
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
  name: Arguments
  nameWithType: ConsoleCommandExecutedEvent.Arguments
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Arguments
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Result*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.Result
  name: Result
  nameWithType: ConsoleCommandExecutedEvent.Result
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Result
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.Response*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.Response
  name: Response
  nameWithType: ConsoleCommandExecutedEvent.Response
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.Response
- uid: PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor*
  commentId: Overload:PluginAPI.Events.ConsoleCommandExecutedEvent.#ctor
  name: ConsoleCommandExecutedEvent
  nameWithType: ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent
  fullName: PluginAPI.Events.ConsoleCommandExecutedEvent.ConsoleCommandExecutedEvent
