### YamlMime:ManagedReference
items:
- uid: PluginAPI.Core.Server
  commentId: T:PluginAPI.Core.Server
  id: Server
  parent: PluginAPI.Core
  children:
  - PluginAPI.Core.Server.#ctor(PluginAPI.Core.Interfaces.IGameComponent)
  - PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String,System.Int64)
  - PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  - PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,System.String,System.Int64)
  - PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.BanPlayerByUserId(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.BanPlayerByUserId(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.BanPlayerByUserId(System.String,System.String,System.Int64,System.String)
  - PluginAPI.Core.Server.Broadcast
  - PluginAPI.Core.Server.ClearBroadcasts
  - PluginAPI.Core.Server.FriendlyFire
  - PluginAPI.Core.Server.GetAllPlayersBanned
  - PluginAPI.Core.Server.GetAllPlayersBanned(BanHandler.BanType)
  - PluginAPI.Core.Server.IdleModeActive
  - PluginAPI.Core.Server.IdleModeAvailable
  - PluginAPI.Core.Server.Init
  - PluginAPI.Core.Server.Instance
  - PluginAPI.Core.Server.IsHeavilyModded
  - PluginAPI.Core.Server.IsPlayerBanned(System.String)
  - PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String)
  - PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String)
  - PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,System.String)
  - PluginAPI.Core.Server.MaxPlayers
  - PluginAPI.Core.Server.PauseIdleMode
  - PluginAPI.Core.Server.PermissionsHandler
  - PluginAPI.Core.Server.PlayerCount
  - PluginAPI.Core.Server.Port
  - PluginAPI.Core.Server.ReservedSlots
  - PluginAPI.Core.Server.Restart
  - PluginAPI.Core.Server.Restart(System.UInt16)
  - PluginAPI.Core.Server.RunCommand(System.String,CommandSender)
  - PluginAPI.Core.Server.SendBroadcast(System.String,System.UInt16,Broadcast.BroadcastFlags,System.Boolean)
  - PluginAPI.Core.Server.ServerIpAddress
  - PluginAPI.Core.Server.SetIdleMode(System.Boolean)
  - PluginAPI.Core.Server.Shutdown
  - PluginAPI.Core.Server.Shutdown(System.UInt16)
  - PluginAPI.Core.Server.SpawnProtectDuration
  - PluginAPI.Core.Server.TPS
  - PluginAPI.Core.Server.UnbanPlayerByIpAddress(System.String)
  - PluginAPI.Core.Server.UnbanPlayerByUserId(System.String)
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: Server
  fullName: PluginAPI.Core.Server
  type: Class
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Server
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 18
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRepresents the server.\n"
  example: []
  syntax:
    content: 'public class Server : Player, IPlayer, IEntity'
    content.vb: >-
      Public Class Server
          Inherits Player
          Implements IPlayer, IEntity
  inheritance:
  - System.Object
  - PluginAPI.Core.Player
  implements:
  - PluginAPI.Core.Interfaces.IPlayer
  - PluginAPI.Core.Interfaces.IEntity
  inheritedMembers:
  - PluginAPI.Core.Player.PlayersUserIds
  - PluginAPI.Core.Player.Count
  - PluginAPI.Core.Player.NonVerifiedCount
  - PluginAPI.Core.Player.ConnectionsCount
  - PluginAPI.Core.Player.GetPlayers
  - PluginAPI.Core.Player.GetPlayers``1
  - PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,{T}@)
  - PluginAPI.Core.Player.Get(UnityEngine.GameObject)
  - PluginAPI.Core.Player.Get``1(UnityEngine.GameObject)
  - PluginAPI.Core.Player.TryGet(UnityEngine.GameObject,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,{T}@)
  - PluginAPI.Core.Player.Get(ReferenceHub)
  - PluginAPI.Core.Player.Get``1(ReferenceHub)
  - PluginAPI.Core.Player.TryGet(ReferenceHub,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(ReferenceHub,{T}@)
  - PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
  - PluginAPI.Core.Player.Get``1(Mirror.NetworkIdentity)
  - PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,{T}@)
  - PluginAPI.Core.Player.GetByName(System.String)
  - PluginAPI.Core.Player.GetByName``1(System.String)
  - PluginAPI.Core.Player.TryGetByName(System.String,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGetByName``1(System.String,{T}@)
  - PluginAPI.Core.Player.Get(System.Int32)
  - PluginAPI.Core.Player.Get``1(System.Int32)
  - PluginAPI.Core.Player.TryGet(System.Int32,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(System.Int32,{T}@)
  - PluginAPI.Core.Player.Get(System.String)
  - PluginAPI.Core.Player.Get``1(System.String)
  - PluginAPI.Core.Player.TryGet(System.String,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(System.String,{T}@)
  - PluginAPI.Core.Player.Get(System.UInt32)
  - PluginAPI.Core.Player.Get``1(System.UInt32)
  - PluginAPI.Core.Player.TryGet(System.UInt32,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(System.UInt32,{T}@)
  - PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
  - PluginAPI.Core.Player.Get``1(CommandSystem.ICommandSender)
  - PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender,PluginAPI.Core.Player@)
  - PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,{T}@)
  - PluginAPI.Core.Player.ReferenceHub
  - PluginAPI.Core.Player.GameObject
  - PluginAPI.Core.Player.NetworkId
  - PluginAPI.Core.Player.PlayerId
  - PluginAPI.Core.Player.Nickname
  - PluginAPI.Core.Player.DisplayNickname
  - PluginAPI.Core.Player.UserId
  - PluginAPI.Core.Player.IpAddress
  - PluginAPI.Core.Player.Role
  - PluginAPI.Core.Player.RoleBase
  - PluginAPI.Core.Player.CustomInfo
  - PluginAPI.Core.Player.Health
  - PluginAPI.Core.Player.MaxHealth
  - PluginAPI.Core.Player.ArtificialHealth
  - PluginAPI.Core.Player.MaxArtificalHealth
  - PluginAPI.Core.Player.RemoteAdminAccess
  - PluginAPI.Core.Player.DoNotTrack
  - PluginAPI.Core.Player.IsOverwatchEnabled
  - PluginAPI.Core.Player.PlayerInfo
  - PluginAPI.Core.Player.CurrentItem
  - PluginAPI.Core.Player.Room
  - PluginAPI.Core.Player.Zone
  - PluginAPI.Core.Player.Items
  - PluginAPI.Core.Player.AmmoBag
  - PluginAPI.Core.Player.RoleColor
  - PluginAPI.Core.Player.RoleName
  - PluginAPI.Core.Player.UnitName
  - PluginAPI.Core.Player.HasReservedSlot
  - PluginAPI.Core.Player.Velocity
  - PluginAPI.Core.Player.VoiceModule
  - PluginAPI.Core.Player.VoiceChannel
  - PluginAPI.Core.Player.IsWithoutItems
  - PluginAPI.Core.Player.IsOutOfAmmo
  - PluginAPI.Core.Player.IsDisarmed
  - PluginAPI.Core.Player.IsMuted
  - PluginAPI.Core.Player.IsIntercomMuted
  - PluginAPI.Core.Player.IsUsingVoiceChat
  - PluginAPI.Core.Player.IsGlobalModerator
  - PluginAPI.Core.Player.IsNorthwoodStaff
  - PluginAPI.Core.Player.IsBypassEnabled
  - PluginAPI.Core.Player.IsGodModeEnabled
  - PluginAPI.Core.Player.IsNoclipEnabled
  - PluginAPI.Core.Player.IsInventoryFull
  - PluginAPI.Core.Player.Team
  - PluginAPI.Core.Player.IsSCP
  - PluginAPI.Core.Player.IsHuman
  - PluginAPI.Core.Player.IsNTF
  - PluginAPI.Core.Player.IsChaos
  - PluginAPI.Core.Player.IsTutorial
  - PluginAPI.Core.Player.IsAlive
  - PluginAPI.Core.Player.IsReady
  - PluginAPI.Core.Player.IsServer
  - PluginAPI.Core.Player.DisarmedBy
  - PluginAPI.Core.Player.Connection
  - PluginAPI.Core.Player.Camera
  - PluginAPI.Core.Player.TemporaryData
  - PluginAPI.Core.Player.EffectsManager
  - PluginAPI.Core.Player.DamageManager
  - PluginAPI.Core.Player.Position
  - PluginAPI.Core.Player.Rotation
  - PluginAPI.Core.Player.StaminaRemaining
  - PluginAPI.Core.Player.SendConsoleMessage(System.String,System.String)
  - PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  - PluginAPI.Core.Player.Ban(System.String,System.Int64)
  - PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer,System.String)
  - PluginAPI.Core.Player.Kick(System.String)
  - PluginAPI.Core.Player.Mute(System.Boolean)
  - PluginAPI.Core.Player.Unmute(System.Boolean)
  - PluginAPI.Core.Player.IntercomMute(System.Boolean)
  - PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
  - PluginAPI.Core.Player.AddAmmo(ItemType,System.UInt16)
  - PluginAPI.Core.Player.AddItem(ItemType)
  - PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
  - PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
  - PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
  - PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
  - PluginAPI.Core.Player.RemoveItems(ItemType,System.Int32)
  - PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
  - PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
  - PluginAPI.Core.Player.DropItem(System.UInt16)
  - PluginAPI.Core.Player.SetAmmo(ItemType,System.UInt16)
  - PluginAPI.Core.Player.GetAmmo(ItemType)
  - PluginAPI.Core.Player.DropAmmo(ItemType,System.UInt16,System.Boolean)
  - PluginAPI.Core.Player.DropEverything
  - PluginAPI.Core.Player.ClearInventory(System.Boolean,System.Boolean)
  - PluginAPI.Core.Player.SetGroup(UserGroup)
  - PluginAPI.Core.Player.Heal(System.Single)
  - PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId,PlayerRoles.RoleChangeReason)
  - PluginAPI.Core.Player.Disconnect(System.String)
  - PluginAPI.Core.Player.ReceiveHint(System.String,System.Single)
  - PluginAPI.Core.Player.ReceiveHint(System.String,Hints.HintEffect[],System.Single)
  - PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
  - PluginAPI.Core.Player.GetStatModule``1
  - PluginAPI.Core.Player.RedirectToServer(System.UInt16)
  - PluginAPI.Core.Player.Reconnect(System.Single,System.Boolean)
  - PluginAPI.Core.Player.Kill
  - PluginAPI.Core.Player.Kill(System.String,System.String)
  - PluginAPI.Core.Player.Damage(System.Single,System.String,System.String)
  - PluginAPI.Core.Player.Damage(System.Single,PluginAPI.Core.Player,UnityEngine.Vector3,System.Int32)
  - PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
  - PluginAPI.Core.Player.OnStart
  - PluginAPI.Core.Player.OnDestroy
  - PluginAPI.Core.Player.OnUpdate
  - PluginAPI.Core.Player.OnLateUpdate
  - PluginAPI.Core.Player.OnFixedUpdate
  - PluginAPI.Core.Player.GetComponent``1(System.Boolean)
  - PluginAPI.Core.Player.TryGetComponent``1({T}@,System.Boolean)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - PluginAPI.Core.Player.PluginAPI.Core.PlayerExtensions.GetAmmoLimit(ItemType)
  - PluginAPI.Core.Player.PluginAPI.Core.PlayerExtensions.GetCategoryLimit(ItemCategory)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PluginAPI.Core.Server.Instance
  commentId: P:PluginAPI.Core.Server.Instance
  id: Instance
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: Server.Instance
  fullName: PluginAPI.Core.Server.Instance
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Instance
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 25
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nThe <xref href=\"PluginAPI.Core.Server\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public static Server Instance { get; set; }
    parameters: []
    return:
      type: PluginAPI.Core.Server
    content.vb: Public Shared Property Instance As Server
  overload: PluginAPI.Core.Server.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Init
  commentId: M:PluginAPI.Core.Server.Init
  id: Init
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Server.Init()
  fullName: PluginAPI.Core.Server.Init()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Init
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 40
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  syntax:
    content: public static void Init()
    content.vb: Public Shared Sub Init
  overload: PluginAPI.Core.Server.Init*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.#ctor(PluginAPI.Core.Interfaces.IGameComponent)
  commentId: M:PluginAPI.Core.Server.#ctor(PluginAPI.Core.Interfaces.IGameComponent)
  id: '#ctor(PluginAPI.Core.Interfaces.IGameComponent)'
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Server(IGameComponent)
  nameWithType: Server.Server(IGameComponent)
  fullName: PluginAPI.Core.Server.Server(PluginAPI.Core.Interfaces.IGameComponent)
  type: Constructor
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: .ctor
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 46
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nInitializes a new instance of the <xref href=\"PluginAPI.Core.Server\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Server(IGameComponent hub)
    parameters:
    - id: hub
      type: PluginAPI.Core.Interfaces.IGameComponent
      description: The hub of server.
    content.vb: Public Sub New(hub As IGameComponent)
  overload: PluginAPI.Core.Server.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: PluginAPI.Core.Server.ServerIpAddress
  commentId: P:PluginAPI.Core.Server.ServerIpAddress
  id: ServerIpAddress
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: ServerIpAddress
  nameWithType: Server.ServerIpAddress
  fullName: PluginAPI.Core.Server.ServerIpAddress
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: ServerIpAddress
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 51
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the Ip address of the server.\n"
  example: []
  syntax:
    content: public static string ServerIpAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property ServerIpAddress As String
  overload: PluginAPI.Core.Server.ServerIpAddress*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.Port
  commentId: P:PluginAPI.Core.Server.Port
  id: Port
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: Server.Port
  fullName: PluginAPI.Core.Server.Port
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Port
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 56
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets the port of the server.\n"
  example: []
  syntax:
    content: public static ushort Port { get; }
    parameters: []
    return:
      type: System.UInt16
    content.vb: Public Shared ReadOnly Property Port As UShort
  overload: PluginAPI.Core.Server.Port*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.FriendlyFire
  commentId: P:PluginAPI.Core.Server.FriendlyFire
  id: FriendlyFire
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: FriendlyFire
  nameWithType: Server.FriendlyFire
  fullName: PluginAPI.Core.Server.FriendlyFire
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: FriendlyFire
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 61
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets a value indicating whether or not server has enabled friendly fire.\n"
  example: []
  syntax:
    content: public static bool FriendlyFire { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property FriendlyFire As Boolean
  overload: PluginAPI.Core.Server.FriendlyFire*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.PlayerCount
  commentId: P:PluginAPI.Core.Server.PlayerCount
  id: PlayerCount
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: PlayerCount
  nameWithType: Server.PlayerCount
  fullName: PluginAPI.Core.Server.PlayerCount
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: PlayerCount
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 78
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGet the amount of players connected to the server.\n"
  example: []
  syntax:
    content: public static int PlayerCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property PlayerCount As Integer
  overload: PluginAPI.Core.Server.PlayerCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.MaxPlayers
  commentId: P:PluginAPI.Core.Server.MaxPlayers
  id: MaxPlayers
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: MaxPlayers
  nameWithType: Server.MaxPlayers
  fullName: PluginAPI.Core.Server.MaxPlayers
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: MaxPlayers
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 83
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets the maximum amount of players online at the same time.\n"
  example: []
  syntax:
    content: public static int MaxPlayers { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property MaxPlayers As Integer
  overload: PluginAPI.Core.Server.MaxPlayers*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.ReservedSlots
  commentId: P:PluginAPI.Core.Server.ReservedSlots
  id: ReservedSlots
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: ReservedSlots
  nameWithType: Server.ReservedSlots
  fullName: PluginAPI.Core.Server.ReservedSlots
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: ReservedSlots
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 92
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets the amount of reserved slots.\n"
  example: []
  syntax:
    content: public static int ReservedSlots { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property ReservedSlots As Integer
  overload: PluginAPI.Core.Server.ReservedSlots*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Broadcast
  commentId: P:PluginAPI.Core.Server.Broadcast
  id: Broadcast
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Broadcast
  nameWithType: Server.Broadcast
  fullName: PluginAPI.Core.Server.Broadcast
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Broadcast
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 101
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets server broadcast singleton.\n"
  example: []
  syntax:
    content: public static Broadcast Broadcast { get; }
    parameters: []
    return:
      type: Broadcast
    content.vb: Public Shared ReadOnly Property Broadcast As Broadcast
  overload: PluginAPI.Core.Server.Broadcast*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.PermissionsHandler
  commentId: P:PluginAPI.Core.Server.PermissionsHandler
  id: PermissionsHandler
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: PermissionsHandler
  nameWithType: Server.PermissionsHandler
  fullName: PluginAPI.Core.Server.PermissionsHandler
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: PermissionsHandler
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 106
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGet server <xref href=\"PluginAPI.Core.Server.PermissionsHandler\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static PermissionsHandler PermissionsHandler { get; }
    parameters: []
    return:
      type: PermissionsHandler
    content.vb: Public Shared ReadOnly Property PermissionsHandler As PermissionsHandler
  overload: PluginAPI.Core.Server.PermissionsHandler*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.TPS
  commentId: P:PluginAPI.Core.Server.TPS
  id: TPS
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: TPS
  nameWithType: Server.TPS
  fullName: PluginAPI.Core.Server.TPS
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: TPS
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 111
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGet actual ticks per second of the server.\n"
  example: []
  syntax:
    content: public static double TPS { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Shared ReadOnly Property TPS As Double
  overload: PluginAPI.Core.Server.TPS*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.SpawnProtectDuration
  commentId: P:PluginAPI.Core.Server.SpawnProtectDuration
  id: SpawnProtectDuration
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: SpawnProtectDuration
  nameWithType: Server.SpawnProtectDuration
  fullName: PluginAPI.Core.Server.SpawnProtectDuration
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: SpawnProtectDuration
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 116
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGet or set server spawn protection duration.\n"
  example: []
  syntax:
    content: public static float SpawnProtectDuration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared Property SpawnProtectDuration As Single
  overload: PluginAPI.Core.Server.SpawnProtectDuration*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.IsHeavilyModded
  commentId: P:PluginAPI.Core.Server.IsHeavilyModded
  id: IsHeavilyModded
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: IsHeavilyModded
  nameWithType: Server.IsHeavilyModded
  fullName: PluginAPI.Core.Server.IsHeavilyModded
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IsHeavilyModded
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 125
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGet or set if server is heavily modded.\n"
  example: []
  syntax:
    content: public static bool IsHeavilyModded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IsHeavilyModded As Boolean
  overload: PluginAPI.Core.Server.IsHeavilyModded*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,System.String,System.Int64)
  commentId: M:PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,System.String,System.Int64)
  id: BanPlayer(PluginAPI.Core.Player,System.String,System.Int64)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayer(Player, String, Int64)
  nameWithType: Server.BanPlayer(Player, String, Int64)
  fullName: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 140
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayer(Player player, string reason, long duration)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The target player which will be banned.
    - id: reason
      type: System.String
      description: The reason of the ban.
    - id: duration
      type: System.Int64
      description: The duration of the ban in seconds.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayer(player As Player, reason As String, duration As Long) As Boolean
  overload: PluginAPI.Core.Server.BanPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  commentId: M:PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  id: BanPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayer(Player, IPlayer, String, Int64)
  nameWithType: Server.BanPlayer(Player, IPlayer, String, Int64)
  fullName: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player, PluginAPI.Core.Interfaces.IPlayer, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 150
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayer(Player player, IPlayer issuer, string reason, long duration)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The player which will be banned.
    - id: issuer
      type: PluginAPI.Core.Interfaces.IPlayer
      description: The player who issued the ban.
    - id: reason
      type: System.String
      description: The reason of ban.
    - id: duration
      type: System.Int64
      description: The duration of the ban in seconds.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayer(player As Player, issuer As IPlayer, reason As String, duration As Long) As Boolean
  overload: PluginAPI.Core.Server.BanPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String,System.Int64)
  commentId: M:PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String,System.Int64)
  id: BanPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String,System.Int64)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayer(Player, ICommandSender, String, Int64)
  nameWithType: Server.BanPlayer(Player, ICommandSender, String, Int64)
  fullName: PluginAPI.Core.Server.BanPlayer(PluginAPI.Core.Player, CommandSystem.ICommandSender, System.String, System.Int64)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 160
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayer(Player player, ICommandSender issuer, string reason, long duration)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The player which will be banned.
    - id: issuer
      type: CommandSystem.ICommandSender
      description: The player who issued the ban.
    - id: reason
      type: System.String
      description: The reason of ban.
    - id: duration
      type: System.Int64
      description: The duration of the ban in seconds.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayer(player As Player, issuer As ICommandSender, reason As String, duration As Long) As Boolean
  overload: PluginAPI.Core.Server.BanPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String)
  commentId: M:PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String)
  id: KickPlayer(PluginAPI.Core.Player,PluginAPI.Core.Interfaces.IPlayer,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: KickPlayer(Player, IPlayer, String)
  nameWithType: Server.KickPlayer(Player, IPlayer, String)
  fullName: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player, PluginAPI.Core.Interfaces.IPlayer, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: KickPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 168
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nKicks a player from the server.\n"
  example: []
  syntax:
    content: public static void KickPlayer(Player player, IPlayer issuer, string reason)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The player which will be kicked.
    - id: issuer
      type: PluginAPI.Core.Interfaces.IPlayer
      description: The player who issued kick.
    - id: reason
      type: System.String
      description: The reason of the kick.
    content.vb: Public Shared Sub KickPlayer(player As Player, issuer As IPlayer, reason As String)
  overload: PluginAPI.Core.Server.KickPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String)
  commentId: M:PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String)
  id: KickPlayer(PluginAPI.Core.Player,CommandSystem.ICommandSender,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: KickPlayer(Player, ICommandSender, String)
  nameWithType: Server.KickPlayer(Player, ICommandSender, String)
  fullName: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player, CommandSystem.ICommandSender, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: KickPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 176
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nKicks a player from the server.\n"
  example: []
  syntax:
    content: public static void KickPlayer(Player player, ICommandSender issuer, string reason)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The player which will be kicked.
    - id: issuer
      type: CommandSystem.ICommandSender
      description: The player who issued kick.
    - id: reason
      type: System.String
      description: The reason of the kick.
    content.vb: Public Shared Sub KickPlayer(player As Player, issuer As ICommandSender, reason As String)
  overload: PluginAPI.Core.Server.KickPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,System.String)
  commentId: M:PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player,System.String)
  id: KickPlayer(PluginAPI.Core.Player,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: KickPlayer(Player, String)
  nameWithType: Server.KickPlayer(Player, String)
  fullName: PluginAPI.Core.Server.KickPlayer(PluginAPI.Core.Player, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: KickPlayer
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 183
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nKicks a player from the server.\n"
  example: []
  syntax:
    content: public static void KickPlayer(Player player, string reason)
    parameters:
    - id: player
      type: PluginAPI.Core.Player
      description: The player which will be kicked.
    - id: reason
      type: System.String
      description: The reason of the kick.
    content.vb: Public Shared Sub KickPlayer(player As Player, reason As String)
  overload: PluginAPI.Core.Server.KickPlayer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByUserId(System.String,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByUserId(System.String,System.String,System.Int64,System.String)
  id: BanPlayerByUserId(System.String,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByUserId(String, String, Int64, String)
  nameWithType: Server.BanPlayerByUserId(String, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByUserId(System.String, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByUserId
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 193
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByUserId(string userId, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: userId
      type: System.String
      description: The userid of player which will be banned.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByUserId(userId As String, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByUserId(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByUserId(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  id: BanPlayerByUserId(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByUserId(String, IPlayer, String, Int64, String)
  nameWithType: Server.BanPlayerByUserId(String, IPlayer, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByUserId(System.String, PluginAPI.Core.Interfaces.IPlayer, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByUserId
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 204
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByUserId(string userId, IPlayer issuer, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: userId
      type: System.String
      description: The userid of the player which will be banned.
    - id: issuer
      type: PluginAPI.Core.Interfaces.IPlayer
      description: The issuer of the ban.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByUserId(userId As String, issuer As IPlayer, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByUserId(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByUserId(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  id: BanPlayerByUserId(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByUserId(String, ICommandSender, String, Int64, String)
  nameWithType: Server.BanPlayerByUserId(String, ICommandSender, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByUserId(System.String, CommandSystem.ICommandSender, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByUserId
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 215
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByUserId(string userId, ICommandSender issuer, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: userId
      type: System.String
      description: The userid of the player which will be banned.
    - id: issuer
      type: CommandSystem.ICommandSender
      description: The issuer of the ban.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByUserId(userId As String, issuer As ICommandSender, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,System.String,System.Int64,System.String)
  id: BanPlayerByIpAddress(System.String,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByIpAddress(String, String, Int64, String)
  nameWithType: Server.BanPlayerByIpAddress(String, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByIpAddress
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 238
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByIpAddress(string ipAddress, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: ipAddress
      type: System.String
      description: The ip address of the player which will be banned.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByIpAddress(ipAddress As String, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByIpAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  id: BanPlayerByIpAddress(System.String,PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByIpAddress(String, IPlayer, String, Int64, String)
  nameWithType: Server.BanPlayerByIpAddress(String, IPlayer, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String, PluginAPI.Core.Interfaces.IPlayer, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByIpAddress
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 249
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByIpAddress(string ipAddress, IPlayer issuer, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: ipAddress
      type: System.String
      description: The ip address of the player which will be banned.
    - id: issuer
      type: PluginAPI.Core.Interfaces.IPlayer
      description: The issuer of the ban.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByIpAddress(ipAddress As String, issuer As IPlayer, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByIpAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  commentId: M:PluginAPI.Core.Server.BanPlayerByIpAddress(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  id: BanPlayerByIpAddress(System.String,CommandSystem.ICommandSender,System.String,System.Int64,System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: BanPlayerByIpAddress(String, ICommandSender, String, Int64, String)
  nameWithType: Server.BanPlayerByIpAddress(String, ICommandSender, String, Int64, String)
  fullName: PluginAPI.Core.Server.BanPlayerByIpAddress(System.String, CommandSystem.ICommandSender, System.String, System.Int64, System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: BanPlayerByIpAddress
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 260
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nBans a player from the server.\n"
  example: []
  syntax:
    content: public static bool BanPlayerByIpAddress(string ipAddress, ICommandSender issuer, string reason, long duration, string bannedPlayerNickname = "UnknownName")
    parameters:
    - id: ipAddress
      type: System.String
      description: The ip address of the player which will be banned.
    - id: issuer
      type: CommandSystem.ICommandSender
      description: The issuer of the ban.
    - id: reason
      type: System.String
      description: The ban reason.
    - id: duration
      type: System.Int64
      description: The duration of the ban.
    - id: bannedPlayerNickname
      type: System.String
      description: The nickname of the banned player.
    return:
      type: System.Boolean
      description: Whether or not the ban was successful.
    content.vb: Public Shared Function BanPlayerByIpAddress(ipAddress As String, issuer As ICommandSender, reason As String, duration As Long, bannedPlayerNickname As String = "UnknownName") As Boolean
  overload: PluginAPI.Core.Server.BanPlayerByIpAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.UnbanPlayerByUserId(System.String)
  commentId: M:PluginAPI.Core.Server.UnbanPlayerByUserId(System.String)
  id: UnbanPlayerByUserId(System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: UnbanPlayerByUserId(String)
  nameWithType: Server.UnbanPlayerByUserId(String)
  fullName: PluginAPI.Core.Server.UnbanPlayerByUserId(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: UnbanPlayerByUserId
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 280
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nUnbans a player from the server.\n"
  example: []
  syntax:
    content: public static bool UnbanPlayerByUserId(string userId)
    parameters:
    - id: userId
      type: System.String
      description: The userid of the player to unban.
    return:
      type: System.Boolean
      description: Whether or not the unban was successful.
    content.vb: Public Shared Function UnbanPlayerByUserId(userId As String) As Boolean
  overload: PluginAPI.Core.Server.UnbanPlayerByUserId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.UnbanPlayerByIpAddress(System.String)
  commentId: M:PluginAPI.Core.Server.UnbanPlayerByIpAddress(System.String)
  id: UnbanPlayerByIpAddress(System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: UnbanPlayerByIpAddress(String)
  nameWithType: Server.UnbanPlayerByIpAddress(String)
  fullName: PluginAPI.Core.Server.UnbanPlayerByIpAddress(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: UnbanPlayerByIpAddress
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 295
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nUnbans a player from the server.\n"
  example: []
  syntax:
    content: public static bool UnbanPlayerByIpAddress(string ipAddress)
    parameters:
    - id: ipAddress
      type: System.String
      description: The ip address of the player.
    return:
      type: System.Boolean
      description: Whether or not the unban was successful.
    content.vb: Public Shared Function UnbanPlayerByIpAddress(ipAddress As String) As Boolean
  overload: PluginAPI.Core.Server.UnbanPlayerByIpAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.IsPlayerBanned(System.String)
  commentId: M:PluginAPI.Core.Server.IsPlayerBanned(System.String)
  id: IsPlayerBanned(System.String)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: IsPlayerBanned(String)
  nameWithType: Server.IsPlayerBanned(String)
  fullName: PluginAPI.Core.Server.IsPlayerBanned(System.String)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IsPlayerBanned
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 310
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nChecks whether or not a player is banned.\n"
  example: []
  syntax:
    content: public static bool IsPlayerBanned(string value)
    parameters:
    - id: value
      type: System.String
      description: The userid or ip of the player.
    return:
      type: System.Boolean
      description: Whether or not the player is banned.
    content.vb: Public Shared Function IsPlayerBanned(value As String) As Boolean
  overload: PluginAPI.Core.Server.IsPlayerBanned*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.GetAllPlayersBanned
  commentId: M:PluginAPI.Core.Server.GetAllPlayersBanned
  id: GetAllPlayersBanned
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: GetAllPlayersBanned()
  nameWithType: Server.GetAllPlayersBanned()
  fullName: PluginAPI.Core.Server.GetAllPlayersBanned()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: GetAllPlayersBanned
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 321
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets all banned players.\n"
  example: []
  syntax:
    content: public static BanDetails[] GetAllPlayersBanned()
    return:
      type: BanDetails[]
      description: List of all banned players.
    content.vb: Public Shared Function GetAllPlayersBanned As BanDetails()
  overload: PluginAPI.Core.Server.GetAllPlayersBanned*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.GetAllPlayersBanned(BanHandler.BanType)
  commentId: M:PluginAPI.Core.Server.GetAllPlayersBanned(BanHandler.BanType)
  id: GetAllPlayersBanned(BanHandler.BanType)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: GetAllPlayersBanned(BanHandler.BanType)
  nameWithType: Server.GetAllPlayersBanned(BanHandler.BanType)
  fullName: PluginAPI.Core.Server.GetAllPlayersBanned(BanHandler.BanType)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: GetAllPlayersBanned
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 333
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets all banned players.\n"
  example: []
  syntax:
    content: public static BanDetails[] GetAllPlayersBanned(BanHandler.BanType banType)
    parameters:
    - id: banType
      type: BanHandler.BanType
      description: The type of ban.
    return:
      type: BanDetails[]
      description: List of specified ban types.
    content.vb: Public Shared Function GetAllPlayersBanned(banType As BanHandler.BanType) As BanDetails()
  overload: PluginAPI.Core.Server.GetAllPlayersBanned*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Restart
  commentId: M:PluginAPI.Core.Server.Restart
  id: Restart
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Restart()
  nameWithType: Server.Restart()
  fullName: PluginAPI.Core.Server.Restart()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Restart
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 340
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRestarts the server and reconnects all players.\n"
  example: []
  syntax:
    content: public static void Restart()
    content.vb: Public Shared Sub Restart
  overload: PluginAPI.Core.Server.Restart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Restart(System.UInt16)
  commentId: M:PluginAPI.Core.Server.Restart(System.UInt16)
  id: Restart(System.UInt16)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Restart(UInt16)
  nameWithType: Server.Restart(UInt16)
  fullName: PluginAPI.Core.Server.Restart(System.UInt16)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Restart
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 345
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRestarts the server and reconnects all players to target server port.\n"
  example: []
  syntax:
    content: public static void Restart(ushort redirectPort)
    parameters:
    - id: redirectPort
      type: System.UInt16
    content.vb: Public Shared Sub Restart(redirectPort As UShort)
  overload: PluginAPI.Core.Server.Restart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Shutdown
  commentId: M:PluginAPI.Core.Server.Shutdown
  id: Shutdown
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Shutdown()
  nameWithType: Server.Shutdown()
  fullName: PluginAPI.Core.Server.Shutdown()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Shutdown
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 354
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nShutdowns the server and disconnects all players.\n"
  example: []
  syntax:
    content: public static void Shutdown()
    content.vb: Public Shared Sub Shutdown
  overload: PluginAPI.Core.Server.Shutdown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.Shutdown(System.UInt16)
  commentId: M:PluginAPI.Core.Server.Shutdown(System.UInt16)
  id: Shutdown(System.UInt16)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: Shutdown(UInt16)
  nameWithType: Server.Shutdown(UInt16)
  fullName: PluginAPI.Core.Server.Shutdown(System.UInt16)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: Shutdown
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 359
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nShutdowns the server and reconnects all players to target server port.\n"
  example: []
  syntax:
    content: public static void Shutdown(ushort redirectPort)
    parameters:
    - id: redirectPort
      type: System.UInt16
    content.vb: Public Shared Sub Shutdown(redirectPort As UShort)
  overload: PluginAPI.Core.Server.Shutdown*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.RunCommand(System.String,CommandSender)
  commentId: M:PluginAPI.Core.Server.RunCommand(System.String,CommandSender)
  id: RunCommand(System.String,CommandSender)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: RunCommand(String, CommandSender)
  nameWithType: Server.RunCommand(String, CommandSender)
  fullName: PluginAPI.Core.Server.RunCommand(System.String, CommandSender)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: RunCommand
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 370
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nRun command as server.\n"
  example: []
  syntax:
    content: public static string RunCommand(string command, CommandSender sender = null)
    parameters:
    - id: command
      type: System.String
      description: The command name.
    - id: sender
      type: CommandSender
      description: The <xref href="CommandSender" data-throw-if-not-resolved="false"></xref> running the command.
    return:
      type: System.String
    content.vb: Public Shared Function RunCommand(command As String, sender As CommandSender = Nothing) As String
  overload: PluginAPI.Core.Server.RunCommand*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.SendBroadcast(System.String,System.UInt16,Broadcast.BroadcastFlags,System.Boolean)
  commentId: M:PluginAPI.Core.Server.SendBroadcast(System.String,System.UInt16,Broadcast.BroadcastFlags,System.Boolean)
  id: SendBroadcast(System.String,System.UInt16,Broadcast.BroadcastFlags,System.Boolean)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: SendBroadcast(String, UInt16, Broadcast.BroadcastFlags, Boolean)
  nameWithType: Server.SendBroadcast(String, UInt16, Broadcast.BroadcastFlags, Boolean)
  fullName: PluginAPI.Core.Server.SendBroadcast(System.String, System.UInt16, Broadcast.BroadcastFlags, System.Boolean)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: SendBroadcast
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 379
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nShows a broadcast to the player.\n"
  example: []
  syntax:
    content: public static void SendBroadcast(string message, ushort duration, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false)
    parameters:
    - id: message
      type: System.String
      description: The message to be broadcasted.
    - id: duration
      type: System.UInt16
      description: The broadcast duration.
    - id: type
      type: Broadcast.BroadcastFlags
      description: The broadcast type.
    - id: shouldClearPrevious
      type: System.Boolean
      description: Clears previous displayed broadcast.
    content.vb: Public Shared Sub SendBroadcast(message As String, duration As UShort, type As Broadcast.BroadcastFlags = Broadcast.BroadcastFlags.Normal, shouldClearPrevious As Boolean = False)
  overload: PluginAPI.Core.Server.SendBroadcast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.ClearBroadcasts
  commentId: M:PluginAPI.Core.Server.ClearBroadcasts
  id: ClearBroadcasts
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: ClearBroadcasts()
  nameWithType: Server.ClearBroadcasts()
  fullName: PluginAPI.Core.Server.ClearBroadcasts()
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: ClearBroadcasts
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 389
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nClears displayed broadcast.\n"
  example: []
  syntax:
    content: public static void ClearBroadcasts()
    content.vb: Public Shared Sub ClearBroadcasts
  overload: PluginAPI.Core.Server.ClearBroadcasts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.IdleModeActive
  commentId: P:PluginAPI.Core.Server.IdleModeActive
  id: IdleModeActive
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: IdleModeActive
  nameWithType: Server.IdleModeActive
  fullName: PluginAPI.Core.Server.IdleModeActive
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IdleModeActive
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 394
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nIndicates whether the server is in the Idle Mode.\n"
  example: []
  syntax:
    content: public static bool IdleModeActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IdleModeActive As Boolean
  overload: PluginAPI.Core.Server.IdleModeActive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: PluginAPI.Core.Server.PauseIdleMode
  commentId: P:PluginAPI.Core.Server.PauseIdleMode
  id: PauseIdleMode
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: PauseIdleMode
  nameWithType: Server.PauseIdleMode
  fullName: PluginAPI.Core.Server.PauseIdleMode
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: PauseIdleMode
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 399
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets whether the server temporarily can&apos;t enter the Idle Mode.\n"
  example: []
  syntax:
    content: public static bool PauseIdleMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property PauseIdleMode As Boolean
  overload: PluginAPI.Core.Server.PauseIdleMode*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.IdleModeAvailable
  commentId: P:PluginAPI.Core.Server.IdleModeAvailable
  id: IdleModeAvailable
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: IdleModeAvailable
  nameWithType: Server.IdleModeAvailable
  fullName: PluginAPI.Core.Server.IdleModeAvailable
  type: Property
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: IdleModeAvailable
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 409
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nGets or sets whether the idle mode is available on the server.\n"
  example: []
  syntax:
    content: public static bool IdleModeAvailable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property IdleModeAvailable As Boolean
  overload: PluginAPI.Core.Server.IdleModeAvailable*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: PluginAPI.Core.Server.SetIdleMode(System.Boolean)
  commentId: M:PluginAPI.Core.Server.SetIdleMode(System.Boolean)
  id: SetIdleMode(System.Boolean)
  parent: PluginAPI.Core.Server
  langs:
  - csharp
  - vb
  name: SetIdleMode(Boolean)
  nameWithType: Server.SetIdleMode(Boolean)
  fullName: PluginAPI.Core.Server.SetIdleMode(System.Boolean)
  type: Method
  source:
    remote:
      path: NwPluginAPI/Core/Server.cs
      branch: 13.0.0
      repo: https://github.com/northwood-studios/NwPluginAPI.git
    id: SetIdleMode
    path: ../NwPluginAPI/Core/Server.cs
    startLine: 420
  assemblies:
  - PluginAPI
  namespace: PluginAPI.Core
  summary: "\nEnters or leaves the idle mode.\n"
  example: []
  syntax:
    content: public static void SetIdleMode(bool state)
    parameters:
    - id: state
      type: System.Boolean
      description: Value indicating whether the server should enter the idle mode.
    content.vb: Public Shared Sub SetIdleMode(state As Boolean)
  overload: PluginAPI.Core.Server.SetIdleMode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: PluginAPI.Core
  commentId: N:PluginAPI.Core
  name: PluginAPI.Core
  nameWithType: PluginAPI.Core
  fullName: PluginAPI.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: PluginAPI.Core.Player
  commentId: T:PluginAPI.Core.Player
  parent: PluginAPI.Core
  name: Player
  nameWithType: Player
  fullName: PluginAPI.Core.Player
- uid: PluginAPI.Core.Interfaces.IPlayer
  commentId: T:PluginAPI.Core.Interfaces.IPlayer
  parent: PluginAPI.Core.Interfaces
  name: IPlayer
  nameWithType: IPlayer
  fullName: PluginAPI.Core.Interfaces.IPlayer
- uid: PluginAPI.Core.Interfaces.IEntity
  commentId: T:PluginAPI.Core.Interfaces.IEntity
  parent: PluginAPI.Core.Interfaces
  name: IEntity
  nameWithType: IEntity
  fullName: PluginAPI.Core.Interfaces.IEntity
- uid: PluginAPI.Core.Player.PlayersUserIds
  commentId: F:PluginAPI.Core.Player.PlayersUserIds
  parent: PluginAPI.Core.Player
  name: PlayersUserIds
  nameWithType: Player.PlayersUserIds
  fullName: PluginAPI.Core.Player.PlayersUserIds
- uid: PluginAPI.Core.Player.Count
  commentId: P:PluginAPI.Core.Player.Count
  parent: PluginAPI.Core.Player
  name: Count
  nameWithType: Player.Count
  fullName: PluginAPI.Core.Player.Count
- uid: PluginAPI.Core.Player.NonVerifiedCount
  commentId: P:PluginAPI.Core.Player.NonVerifiedCount
  parent: PluginAPI.Core.Player
  name: NonVerifiedCount
  nameWithType: Player.NonVerifiedCount
  fullName: PluginAPI.Core.Player.NonVerifiedCount
- uid: PluginAPI.Core.Player.ConnectionsCount
  commentId: P:PluginAPI.Core.Player.ConnectionsCount
  parent: PluginAPI.Core.Player
  name: ConnectionsCount
  nameWithType: Player.ConnectionsCount
  fullName: PluginAPI.Core.Player.ConnectionsCount
- uid: PluginAPI.Core.Player.GetPlayers
  commentId: M:PluginAPI.Core.Player.GetPlayers
  parent: PluginAPI.Core.Player
  name: GetPlayers()
  nameWithType: Player.GetPlayers()
  fullName: PluginAPI.Core.Player.GetPlayers()
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetPlayers
    name: GetPlayers
    nameWithType: Player.GetPlayers
    fullName: PluginAPI.Core.Player.GetPlayers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetPlayers
    name: GetPlayers
    nameWithType: Player.GetPlayers
    fullName: PluginAPI.Core.Player.GetPlayers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetPlayers``1
  commentId: M:PluginAPI.Core.Player.GetPlayers``1
  parent: PluginAPI.Core.Player
  name: GetPlayers<T>()
  nameWithType: Player.GetPlayers<T>()
  fullName: PluginAPI.Core.Player.GetPlayers<T>()
  nameWithType.vb: Player.GetPlayers(Of T)()
  fullName.vb: PluginAPI.Core.Player.GetPlayers(Of T)()
  name.vb: GetPlayers(Of T)()
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetPlayers``1
    name: GetPlayers<T>
    nameWithType: Player.GetPlayers<T>
    fullName: PluginAPI.Core.Player.GetPlayers<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetPlayers``1
    name: GetPlayers(Of T)
    nameWithType: Player.GetPlayers(Of T)
    fullName: PluginAPI.Core.Player.GetPlayers(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  name: TryGet(IGameComponent, Player)
  nameWithType: Player.TryGet(IGameComponent, Player)
  fullName: PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(PluginAPI.Core.Interfaces.IGameComponent,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
  name: TryGet<T>(IGameComponent, T)
  nameWithType: Player.TryGet<T>(IGameComponent, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(PluginAPI.Core.Interfaces.IGameComponent, T)
  nameWithType.vb: Player.TryGet(Of T)(IGameComponent, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(PluginAPI.Core.Interfaces.IGameComponent, T)
  name.vb: TryGet(Of T)(IGameComponent, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(UnityEngine.GameObject)
  commentId: M:PluginAPI.Core.Player.Get(UnityEngine.GameObject)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(GameObject)
  nameWithType: Player.Get(GameObject)
  fullName: PluginAPI.Core.Player.Get(UnityEngine.GameObject)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(UnityEngine.GameObject)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(UnityEngine.GameObject)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(UnityEngine.GameObject)
  commentId: M:PluginAPI.Core.Player.Get``1(UnityEngine.GameObject)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(GameObject)
  nameWithType: Player.Get<T>(GameObject)
  fullName: PluginAPI.Core.Player.Get<T>(UnityEngine.GameObject)
  nameWithType.vb: Player.Get(Of T)(GameObject)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(UnityEngine.GameObject)
  name.vb: Get(Of T)(GameObject)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(UnityEngine.GameObject)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(UnityEngine.GameObject)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(UnityEngine.GameObject,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(UnityEngine.GameObject,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(GameObject, Player)
  nameWithType: Player.TryGet(GameObject, Player)
  fullName: PluginAPI.Core.Player.TryGet(UnityEngine.GameObject, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(UnityEngine.GameObject,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(UnityEngine.GameObject,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
  name: TryGet<T>(GameObject, T)
  nameWithType: Player.TryGet<T>(GameObject, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(UnityEngine.GameObject, T)
  nameWithType.vb: Player.TryGet(Of T)(GameObject, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(UnityEngine.GameObject, T)
  name.vb: TryGet(Of T)(GameObject, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(ReferenceHub)
  commentId: M:PluginAPI.Core.Player.Get(ReferenceHub)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(ReferenceHub)
  nameWithType: Player.Get(ReferenceHub)
  fullName: PluginAPI.Core.Player.Get(ReferenceHub)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(ReferenceHub)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(ReferenceHub)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(ReferenceHub)
  commentId: M:PluginAPI.Core.Player.Get``1(ReferenceHub)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(ReferenceHub)
  nameWithType: Player.Get<T>(ReferenceHub)
  fullName: PluginAPI.Core.Player.Get<T>(ReferenceHub)
  nameWithType.vb: Player.Get(Of T)(ReferenceHub)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(ReferenceHub)
  name.vb: Get(Of T)(ReferenceHub)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(ReferenceHub)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(ReferenceHub)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(ReferenceHub,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(ReferenceHub,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(ReferenceHub, Player)
  nameWithType: Player.TryGet(ReferenceHub, Player)
  fullName: PluginAPI.Core.Player.TryGet(ReferenceHub, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(ReferenceHub,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(ReferenceHub,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
  name: TryGet<T>(ReferenceHub, T)
  nameWithType: Player.TryGet<T>(ReferenceHub, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(ReferenceHub, T)
  nameWithType.vb: Player.TryGet(Of T)(ReferenceHub, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(ReferenceHub, T)
  name.vb: TryGet(Of T)(ReferenceHub, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
  commentId: M:PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(NetworkIdentity)
  nameWithType: Player.Get(NetworkIdentity)
  fullName: PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(Mirror.NetworkIdentity)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(Mirror.NetworkIdentity)
  commentId: M:PluginAPI.Core.Player.Get``1(Mirror.NetworkIdentity)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(NetworkIdentity)
  nameWithType: Player.Get<T>(NetworkIdentity)
  fullName: PluginAPI.Core.Player.Get<T>(Mirror.NetworkIdentity)
  nameWithType.vb: Player.Get(Of T)(NetworkIdentity)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(Mirror.NetworkIdentity)
  name.vb: Get(Of T)(NetworkIdentity)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(Mirror.NetworkIdentity)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(Mirror.NetworkIdentity)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(NetworkIdentity, Player)
  nameWithType: Player.TryGet(NetworkIdentity, Player)
  fullName: PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(Mirror.NetworkIdentity,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
  name: TryGet<T>(NetworkIdentity, T)
  nameWithType: Player.TryGet<T>(NetworkIdentity, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(Mirror.NetworkIdentity, T)
  nameWithType.vb: Player.TryGet(Of T)(NetworkIdentity, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(Mirror.NetworkIdentity, T)
  name.vb: TryGet(Of T)(NetworkIdentity, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetByName(System.String)
  commentId: M:PluginAPI.Core.Player.GetByName(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: GetByName(String)
  nameWithType: Player.GetByName(String)
  fullName: PluginAPI.Core.Player.GetByName(System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetByName(System.String)
    name: GetByName
    nameWithType: Player.GetByName
    fullName: PluginAPI.Core.Player.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetByName(System.String)
    name: GetByName
    nameWithType: Player.GetByName
    fullName: PluginAPI.Core.Player.GetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetByName``1(System.String)
  commentId: M:PluginAPI.Core.Player.GetByName``1(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: GetByName<T>(String)
  nameWithType: Player.GetByName<T>(String)
  fullName: PluginAPI.Core.Player.GetByName<T>(System.String)
  nameWithType.vb: Player.GetByName(Of T)(String)
  fullName.vb: PluginAPI.Core.Player.GetByName(Of T)(System.String)
  name.vb: GetByName(Of T)(String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetByName``1(System.String)
    name: GetByName<T>
    nameWithType: Player.GetByName<T>
    fullName: PluginAPI.Core.Player.GetByName<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetByName``1(System.String)
    name: GetByName(Of T)
    nameWithType: Player.GetByName(Of T)
    fullName: PluginAPI.Core.Player.GetByName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGetByName(System.String,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGetByName(System.String,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGetByName(String, Player)
  nameWithType: Player.TryGetByName(String, Player)
  fullName: PluginAPI.Core.Player.TryGetByName(System.String, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGetByName(System.String,PluginAPI.Core.Player@)
    name: TryGetByName
    nameWithType: Player.TryGetByName
    fullName: PluginAPI.Core.Player.TryGetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGetByName(System.String,PluginAPI.Core.Player@)
    name: TryGetByName
    nameWithType: Player.TryGetByName
    fullName: PluginAPI.Core.Player.TryGetByName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGetByName``1(System.String,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
  name: TryGetByName<T>(String, T)
  nameWithType: Player.TryGetByName<T>(String, T)
  fullName: PluginAPI.Core.Player.TryGetByName<T>(System.String, T)
  nameWithType.vb: Player.TryGetByName(Of T)(String, T)
  fullName.vb: PluginAPI.Core.Player.TryGetByName(Of T)(System.String, T)
  name.vb: TryGetByName(Of T)(String, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
    name: TryGetByName<T>
    nameWithType: Player.TryGetByName<T>
    fullName: PluginAPI.Core.Player.TryGetByName<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
    name: TryGetByName(Of T)
    nameWithType: Player.TryGetByName(Of T)
    fullName: PluginAPI.Core.Player.TryGetByName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(System.Int32)
  commentId: M:PluginAPI.Core.Player.Get(System.Int32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(Int32)
  nameWithType: Player.Get(Int32)
  fullName: PluginAPI.Core.Player.Get(System.Int32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(System.Int32)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(System.Int32)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(System.Int32)
  commentId: M:PluginAPI.Core.Player.Get``1(System.Int32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(Int32)
  nameWithType: Player.Get<T>(Int32)
  fullName: PluginAPI.Core.Player.Get<T>(System.Int32)
  nameWithType.vb: Player.Get(Of T)(Int32)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(System.Int32)
  name.vb: Get(Of T)(Int32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(System.Int32)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(System.Int32)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(System.Int32,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(System.Int32,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(Int32, Player)
  nameWithType: Player.TryGet(Int32, Player)
  fullName: PluginAPI.Core.Player.TryGet(System.Int32, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(System.Int32,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(System.Int32,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.Int32,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
  name: TryGet<T>(Int32, T)
  nameWithType: Player.TryGet<T>(Int32, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.Int32, T)
  nameWithType.vb: Player.TryGet(Of T)(Int32, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.Int32, T)
  name.vb: TryGet(Of T)(Int32, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(System.String)
  commentId: M:PluginAPI.Core.Player.Get(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(String)
  nameWithType: Player.Get(String)
  fullName: PluginAPI.Core.Player.Get(System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(System.String)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(System.String)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(System.String)
  commentId: M:PluginAPI.Core.Player.Get``1(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(String)
  nameWithType: Player.Get<T>(String)
  fullName: PluginAPI.Core.Player.Get<T>(System.String)
  nameWithType.vb: Player.Get(Of T)(String)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(System.String)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(System.String)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(System.String,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(System.String,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(String, Player)
  nameWithType: Player.TryGet(String, Player)
  fullName: PluginAPI.Core.Player.TryGet(System.String, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(System.String,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(System.String,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.String,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.String,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
  name: TryGet<T>(String, T)
  nameWithType: Player.TryGet<T>(String, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.String, T)
  nameWithType.vb: Player.TryGet(Of T)(String, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.String, T)
  name.vb: TryGet(Of T)(String, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(System.UInt32)
  commentId: M:PluginAPI.Core.Player.Get(System.UInt32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(UInt32)
  nameWithType: Player.Get(UInt32)
  fullName: PluginAPI.Core.Player.Get(System.UInt32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(System.UInt32)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(System.UInt32)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(System.UInt32)
  commentId: M:PluginAPI.Core.Player.Get``1(System.UInt32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(UInt32)
  nameWithType: Player.Get<T>(UInt32)
  fullName: PluginAPI.Core.Player.Get<T>(System.UInt32)
  nameWithType.vb: Player.Get(Of T)(UInt32)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(System.UInt32)
  name.vb: Get(Of T)(UInt32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(System.UInt32)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(System.UInt32)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(System.UInt32,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(System.UInt32,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(UInt32, Player)
  nameWithType: Player.TryGet(UInt32, Player)
  fullName: PluginAPI.Core.Player.TryGet(System.UInt32, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(System.UInt32,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(System.UInt32,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
  name: TryGet<T>(UInt32, T)
  nameWithType: Player.TryGet<T>(UInt32, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.UInt32, T)
  nameWithType.vb: Player.TryGet(Of T)(UInt32, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.UInt32, T)
  name.vb: TryGet(Of T)(UInt32, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
  commentId: M:PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get(ICommandSender)
  nameWithType: Player.Get(ICommandSender)
  fullName: PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get(CommandSystem.ICommandSender)
    name: Get
    nameWithType: Player.Get
    fullName: PluginAPI.Core.Player.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Get``1(CommandSystem.ICommandSender)
  commentId: M:PluginAPI.Core.Player.Get``1(CommandSystem.ICommandSender)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Get<T>(ICommandSender)
  nameWithType: Player.Get<T>(ICommandSender)
  fullName: PluginAPI.Core.Player.Get<T>(CommandSystem.ICommandSender)
  nameWithType.vb: Player.Get(Of T)(ICommandSender)
  fullName.vb: PluginAPI.Core.Player.Get(Of T)(CommandSystem.ICommandSender)
  name.vb: Get(Of T)(ICommandSender)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Get``1(CommandSystem.ICommandSender)
    name: Get<T>
    nameWithType: Player.Get<T>
    fullName: PluginAPI.Core.Player.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Get``1(CommandSystem.ICommandSender)
    name: Get(Of T)
    nameWithType: Player.Get(Of T)
    fullName: PluginAPI.Core.Player.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender,PluginAPI.Core.Player@)
  commentId: M:PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender,PluginAPI.Core.Player@)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: TryGet(ICommandSender, Player)
  nameWithType: Player.TryGet(ICommandSender, Player)
  fullName: PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender, PluginAPI.Core.Player)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet(CommandSystem.ICommandSender,PluginAPI.Core.Player@)
    name: TryGet
    nameWithType: Player.TryGet
    fullName: PluginAPI.Core.Player.TryGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,{T}@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
  name: TryGet<T>(ICommandSender, T)
  nameWithType: Player.TryGet<T>(ICommandSender, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(CommandSystem.ICommandSender, T)
  nameWithType.vb: Player.TryGet(Of T)(ICommandSender, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(CommandSystem.ICommandSender, T)
  name.vb: TryGet(Of T)(ICommandSender, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.ReferenceHub
  commentId: P:PluginAPI.Core.Player.ReferenceHub
  parent: PluginAPI.Core.Player
  name: ReferenceHub
  nameWithType: Player.ReferenceHub
  fullName: PluginAPI.Core.Player.ReferenceHub
- uid: PluginAPI.Core.Player.GameObject
  commentId: P:PluginAPI.Core.Player.GameObject
  parent: PluginAPI.Core.Player
  name: GameObject
  nameWithType: Player.GameObject
  fullName: PluginAPI.Core.Player.GameObject
- uid: PluginAPI.Core.Player.NetworkId
  commentId: P:PluginAPI.Core.Player.NetworkId
  parent: PluginAPI.Core.Player
  name: NetworkId
  nameWithType: Player.NetworkId
  fullName: PluginAPI.Core.Player.NetworkId
- uid: PluginAPI.Core.Player.PlayerId
  commentId: P:PluginAPI.Core.Player.PlayerId
  parent: PluginAPI.Core.Player
  name: PlayerId
  nameWithType: Player.PlayerId
  fullName: PluginAPI.Core.Player.PlayerId
- uid: PluginAPI.Core.Player.Nickname
  commentId: P:PluginAPI.Core.Player.Nickname
  parent: PluginAPI.Core.Player
  name: Nickname
  nameWithType: Player.Nickname
  fullName: PluginAPI.Core.Player.Nickname
- uid: PluginAPI.Core.Player.DisplayNickname
  commentId: P:PluginAPI.Core.Player.DisplayNickname
  parent: PluginAPI.Core.Player
  name: DisplayNickname
  nameWithType: Player.DisplayNickname
  fullName: PluginAPI.Core.Player.DisplayNickname
- uid: PluginAPI.Core.Player.UserId
  commentId: P:PluginAPI.Core.Player.UserId
  parent: PluginAPI.Core.Player
  name: UserId
  nameWithType: Player.UserId
  fullName: PluginAPI.Core.Player.UserId
- uid: PluginAPI.Core.Player.IpAddress
  commentId: P:PluginAPI.Core.Player.IpAddress
  parent: PluginAPI.Core.Player
  name: IpAddress
  nameWithType: Player.IpAddress
  fullName: PluginAPI.Core.Player.IpAddress
- uid: PluginAPI.Core.Player.Role
  commentId: P:PluginAPI.Core.Player.Role
  parent: PluginAPI.Core.Player
  name: Role
  nameWithType: Player.Role
  fullName: PluginAPI.Core.Player.Role
- uid: PluginAPI.Core.Player.RoleBase
  commentId: P:PluginAPI.Core.Player.RoleBase
  parent: PluginAPI.Core.Player
  name: RoleBase
  nameWithType: Player.RoleBase
  fullName: PluginAPI.Core.Player.RoleBase
- uid: PluginAPI.Core.Player.CustomInfo
  commentId: P:PluginAPI.Core.Player.CustomInfo
  parent: PluginAPI.Core.Player
  name: CustomInfo
  nameWithType: Player.CustomInfo
  fullName: PluginAPI.Core.Player.CustomInfo
- uid: PluginAPI.Core.Player.Health
  commentId: P:PluginAPI.Core.Player.Health
  parent: PluginAPI.Core.Player
  name: Health
  nameWithType: Player.Health
  fullName: PluginAPI.Core.Player.Health
- uid: PluginAPI.Core.Player.MaxHealth
  commentId: P:PluginAPI.Core.Player.MaxHealth
  parent: PluginAPI.Core.Player
  name: MaxHealth
  nameWithType: Player.MaxHealth
  fullName: PluginAPI.Core.Player.MaxHealth
- uid: PluginAPI.Core.Player.ArtificialHealth
  commentId: P:PluginAPI.Core.Player.ArtificialHealth
  parent: PluginAPI.Core.Player
  name: ArtificialHealth
  nameWithType: Player.ArtificialHealth
  fullName: PluginAPI.Core.Player.ArtificialHealth
- uid: PluginAPI.Core.Player.MaxArtificalHealth
  commentId: P:PluginAPI.Core.Player.MaxArtificalHealth
  parent: PluginAPI.Core.Player
  name: MaxArtificalHealth
  nameWithType: Player.MaxArtificalHealth
  fullName: PluginAPI.Core.Player.MaxArtificalHealth
- uid: PluginAPI.Core.Player.RemoteAdminAccess
  commentId: P:PluginAPI.Core.Player.RemoteAdminAccess
  parent: PluginAPI.Core.Player
  name: RemoteAdminAccess
  nameWithType: Player.RemoteAdminAccess
  fullName: PluginAPI.Core.Player.RemoteAdminAccess
- uid: PluginAPI.Core.Player.DoNotTrack
  commentId: P:PluginAPI.Core.Player.DoNotTrack
  parent: PluginAPI.Core.Player
  name: DoNotTrack
  nameWithType: Player.DoNotTrack
  fullName: PluginAPI.Core.Player.DoNotTrack
- uid: PluginAPI.Core.Player.IsOverwatchEnabled
  commentId: P:PluginAPI.Core.Player.IsOverwatchEnabled
  parent: PluginAPI.Core.Player
  name: IsOverwatchEnabled
  nameWithType: Player.IsOverwatchEnabled
  fullName: PluginAPI.Core.Player.IsOverwatchEnabled
- uid: PluginAPI.Core.Player.PlayerInfo
  commentId: P:PluginAPI.Core.Player.PlayerInfo
  parent: PluginAPI.Core.Player
  name: PlayerInfo
  nameWithType: Player.PlayerInfo
  fullName: PluginAPI.Core.Player.PlayerInfo
- uid: PluginAPI.Core.Player.CurrentItem
  commentId: P:PluginAPI.Core.Player.CurrentItem
  parent: PluginAPI.Core.Player
  name: CurrentItem
  nameWithType: Player.CurrentItem
  fullName: PluginAPI.Core.Player.CurrentItem
- uid: PluginAPI.Core.Player.Room
  commentId: P:PluginAPI.Core.Player.Room
  parent: PluginAPI.Core.Player
  name: Room
  nameWithType: Player.Room
  fullName: PluginAPI.Core.Player.Room
- uid: PluginAPI.Core.Player.Zone
  commentId: P:PluginAPI.Core.Player.Zone
  parent: PluginAPI.Core.Player
  name: Zone
  nameWithType: Player.Zone
  fullName: PluginAPI.Core.Player.Zone
- uid: PluginAPI.Core.Player.Items
  commentId: P:PluginAPI.Core.Player.Items
  parent: PluginAPI.Core.Player
  name: Items
  nameWithType: Player.Items
  fullName: PluginAPI.Core.Player.Items
- uid: PluginAPI.Core.Player.AmmoBag
  commentId: P:PluginAPI.Core.Player.AmmoBag
  parent: PluginAPI.Core.Player
  name: AmmoBag
  nameWithType: Player.AmmoBag
  fullName: PluginAPI.Core.Player.AmmoBag
- uid: PluginAPI.Core.Player.RoleColor
  commentId: P:PluginAPI.Core.Player.RoleColor
  parent: PluginAPI.Core.Player
  name: RoleColor
  nameWithType: Player.RoleColor
  fullName: PluginAPI.Core.Player.RoleColor
- uid: PluginAPI.Core.Player.RoleName
  commentId: P:PluginAPI.Core.Player.RoleName
  parent: PluginAPI.Core.Player
  name: RoleName
  nameWithType: Player.RoleName
  fullName: PluginAPI.Core.Player.RoleName
- uid: PluginAPI.Core.Player.UnitName
  commentId: P:PluginAPI.Core.Player.UnitName
  parent: PluginAPI.Core.Player
  name: UnitName
  nameWithType: Player.UnitName
  fullName: PluginAPI.Core.Player.UnitName
- uid: PluginAPI.Core.Player.HasReservedSlot
  commentId: P:PluginAPI.Core.Player.HasReservedSlot
  parent: PluginAPI.Core.Player
  name: HasReservedSlot
  nameWithType: Player.HasReservedSlot
  fullName: PluginAPI.Core.Player.HasReservedSlot
- uid: PluginAPI.Core.Player.Velocity
  commentId: P:PluginAPI.Core.Player.Velocity
  parent: PluginAPI.Core.Player
  name: Velocity
  nameWithType: Player.Velocity
  fullName: PluginAPI.Core.Player.Velocity
- uid: PluginAPI.Core.Player.VoiceModule
  commentId: P:PluginAPI.Core.Player.VoiceModule
  parent: PluginAPI.Core.Player
  name: VoiceModule
  nameWithType: Player.VoiceModule
  fullName: PluginAPI.Core.Player.VoiceModule
- uid: PluginAPI.Core.Player.VoiceChannel
  commentId: P:PluginAPI.Core.Player.VoiceChannel
  parent: PluginAPI.Core.Player
  name: VoiceChannel
  nameWithType: Player.VoiceChannel
  fullName: PluginAPI.Core.Player.VoiceChannel
- uid: PluginAPI.Core.Player.IsWithoutItems
  commentId: P:PluginAPI.Core.Player.IsWithoutItems
  parent: PluginAPI.Core.Player
  name: IsWithoutItems
  nameWithType: Player.IsWithoutItems
  fullName: PluginAPI.Core.Player.IsWithoutItems
- uid: PluginAPI.Core.Player.IsOutOfAmmo
  commentId: P:PluginAPI.Core.Player.IsOutOfAmmo
  parent: PluginAPI.Core.Player
  name: IsOutOfAmmo
  nameWithType: Player.IsOutOfAmmo
  fullName: PluginAPI.Core.Player.IsOutOfAmmo
- uid: PluginAPI.Core.Player.IsDisarmed
  commentId: P:PluginAPI.Core.Player.IsDisarmed
  parent: PluginAPI.Core.Player
  name: IsDisarmed
  nameWithType: Player.IsDisarmed
  fullName: PluginAPI.Core.Player.IsDisarmed
- uid: PluginAPI.Core.Player.IsMuted
  commentId: P:PluginAPI.Core.Player.IsMuted
  parent: PluginAPI.Core.Player
  name: IsMuted
  nameWithType: Player.IsMuted
  fullName: PluginAPI.Core.Player.IsMuted
- uid: PluginAPI.Core.Player.IsIntercomMuted
  commentId: P:PluginAPI.Core.Player.IsIntercomMuted
  parent: PluginAPI.Core.Player
  name: IsIntercomMuted
  nameWithType: Player.IsIntercomMuted
  fullName: PluginAPI.Core.Player.IsIntercomMuted
- uid: PluginAPI.Core.Player.IsUsingVoiceChat
  commentId: P:PluginAPI.Core.Player.IsUsingVoiceChat
  parent: PluginAPI.Core.Player
  name: IsUsingVoiceChat
  nameWithType: Player.IsUsingVoiceChat
  fullName: PluginAPI.Core.Player.IsUsingVoiceChat
- uid: PluginAPI.Core.Player.IsGlobalModerator
  commentId: P:PluginAPI.Core.Player.IsGlobalModerator
  parent: PluginAPI.Core.Player
  name: IsGlobalModerator
  nameWithType: Player.IsGlobalModerator
  fullName: PluginAPI.Core.Player.IsGlobalModerator
- uid: PluginAPI.Core.Player.IsNorthwoodStaff
  commentId: P:PluginAPI.Core.Player.IsNorthwoodStaff
  parent: PluginAPI.Core.Player
  name: IsNorthwoodStaff
  nameWithType: Player.IsNorthwoodStaff
  fullName: PluginAPI.Core.Player.IsNorthwoodStaff
- uid: PluginAPI.Core.Player.IsBypassEnabled
  commentId: P:PluginAPI.Core.Player.IsBypassEnabled
  parent: PluginAPI.Core.Player
  name: IsBypassEnabled
  nameWithType: Player.IsBypassEnabled
  fullName: PluginAPI.Core.Player.IsBypassEnabled
- uid: PluginAPI.Core.Player.IsGodModeEnabled
  commentId: P:PluginAPI.Core.Player.IsGodModeEnabled
  parent: PluginAPI.Core.Player
  name: IsGodModeEnabled
  nameWithType: Player.IsGodModeEnabled
  fullName: PluginAPI.Core.Player.IsGodModeEnabled
- uid: PluginAPI.Core.Player.IsNoclipEnabled
  commentId: P:PluginAPI.Core.Player.IsNoclipEnabled
  parent: PluginAPI.Core.Player
  name: IsNoclipEnabled
  nameWithType: Player.IsNoclipEnabled
  fullName: PluginAPI.Core.Player.IsNoclipEnabled
- uid: PluginAPI.Core.Player.IsInventoryFull
  commentId: P:PluginAPI.Core.Player.IsInventoryFull
  parent: PluginAPI.Core.Player
  name: IsInventoryFull
  nameWithType: Player.IsInventoryFull
  fullName: PluginAPI.Core.Player.IsInventoryFull
- uid: PluginAPI.Core.Player.Team
  commentId: P:PluginAPI.Core.Player.Team
  parent: PluginAPI.Core.Player
  name: Team
  nameWithType: Player.Team
  fullName: PluginAPI.Core.Player.Team
- uid: PluginAPI.Core.Player.IsSCP
  commentId: P:PluginAPI.Core.Player.IsSCP
  parent: PluginAPI.Core.Player
  name: IsSCP
  nameWithType: Player.IsSCP
  fullName: PluginAPI.Core.Player.IsSCP
- uid: PluginAPI.Core.Player.IsHuman
  commentId: P:PluginAPI.Core.Player.IsHuman
  parent: PluginAPI.Core.Player
  name: IsHuman
  nameWithType: Player.IsHuman
  fullName: PluginAPI.Core.Player.IsHuman
- uid: PluginAPI.Core.Player.IsNTF
  commentId: P:PluginAPI.Core.Player.IsNTF
  parent: PluginAPI.Core.Player
  name: IsNTF
  nameWithType: Player.IsNTF
  fullName: PluginAPI.Core.Player.IsNTF
- uid: PluginAPI.Core.Player.IsChaos
  commentId: P:PluginAPI.Core.Player.IsChaos
  parent: PluginAPI.Core.Player
  name: IsChaos
  nameWithType: Player.IsChaos
  fullName: PluginAPI.Core.Player.IsChaos
- uid: PluginAPI.Core.Player.IsTutorial
  commentId: P:PluginAPI.Core.Player.IsTutorial
  parent: PluginAPI.Core.Player
  name: IsTutorial
  nameWithType: Player.IsTutorial
  fullName: PluginAPI.Core.Player.IsTutorial
- uid: PluginAPI.Core.Player.IsAlive
  commentId: P:PluginAPI.Core.Player.IsAlive
  parent: PluginAPI.Core.Player
  name: IsAlive
  nameWithType: Player.IsAlive
  fullName: PluginAPI.Core.Player.IsAlive
- uid: PluginAPI.Core.Player.IsReady
  commentId: P:PluginAPI.Core.Player.IsReady
  parent: PluginAPI.Core.Player
  name: IsReady
  nameWithType: Player.IsReady
  fullName: PluginAPI.Core.Player.IsReady
- uid: PluginAPI.Core.Player.IsServer
  commentId: P:PluginAPI.Core.Player.IsServer
  parent: PluginAPI.Core.Player
  name: IsServer
  nameWithType: Player.IsServer
  fullName: PluginAPI.Core.Player.IsServer
- uid: PluginAPI.Core.Player.DisarmedBy
  commentId: P:PluginAPI.Core.Player.DisarmedBy
  parent: PluginAPI.Core.Player
  name: DisarmedBy
  nameWithType: Player.DisarmedBy
  fullName: PluginAPI.Core.Player.DisarmedBy
- uid: PluginAPI.Core.Player.Connection
  commentId: P:PluginAPI.Core.Player.Connection
  parent: PluginAPI.Core.Player
  name: Connection
  nameWithType: Player.Connection
  fullName: PluginAPI.Core.Player.Connection
- uid: PluginAPI.Core.Player.Camera
  commentId: P:PluginAPI.Core.Player.Camera
  parent: PluginAPI.Core.Player
  name: Camera
  nameWithType: Player.Camera
  fullName: PluginAPI.Core.Player.Camera
- uid: PluginAPI.Core.Player.TemporaryData
  commentId: P:PluginAPI.Core.Player.TemporaryData
  parent: PluginAPI.Core.Player
  name: TemporaryData
  nameWithType: Player.TemporaryData
  fullName: PluginAPI.Core.Player.TemporaryData
- uid: PluginAPI.Core.Player.EffectsManager
  commentId: P:PluginAPI.Core.Player.EffectsManager
  parent: PluginAPI.Core.Player
  name: EffectsManager
  nameWithType: Player.EffectsManager
  fullName: PluginAPI.Core.Player.EffectsManager
- uid: PluginAPI.Core.Player.DamageManager
  commentId: P:PluginAPI.Core.Player.DamageManager
  parent: PluginAPI.Core.Player
  name: DamageManager
  nameWithType: Player.DamageManager
  fullName: PluginAPI.Core.Player.DamageManager
- uid: PluginAPI.Core.Player.Position
  commentId: P:PluginAPI.Core.Player.Position
  parent: PluginAPI.Core.Player
  name: Position
  nameWithType: Player.Position
  fullName: PluginAPI.Core.Player.Position
- uid: PluginAPI.Core.Player.Rotation
  commentId: P:PluginAPI.Core.Player.Rotation
  parent: PluginAPI.Core.Player
  name: Rotation
  nameWithType: Player.Rotation
  fullName: PluginAPI.Core.Player.Rotation
- uid: PluginAPI.Core.Player.StaminaRemaining
  commentId: P:PluginAPI.Core.Player.StaminaRemaining
  parent: PluginAPI.Core.Player
  name: StaminaRemaining
  nameWithType: Player.StaminaRemaining
  fullName: PluginAPI.Core.Player.StaminaRemaining
- uid: PluginAPI.Core.Player.SendConsoleMessage(System.String,System.String)
  commentId: M:PluginAPI.Core.Player.SendConsoleMessage(System.String,System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: SendConsoleMessage(String, String)
  nameWithType: Player.SendConsoleMessage(String, String)
  fullName: PluginAPI.Core.Player.SendConsoleMessage(System.String, System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.SendConsoleMessage(System.String,System.String)
    name: SendConsoleMessage
    nameWithType: Player.SendConsoleMessage
    fullName: PluginAPI.Core.Player.SendConsoleMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.SendConsoleMessage(System.String,System.String)
    name: SendConsoleMessage
    nameWithType: Player.SendConsoleMessage
    fullName: PluginAPI.Core.Player.SendConsoleMessage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  commentId: M:PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Ban(IPlayer, String, Int64)
  nameWithType: Player.Ban(IPlayer, String, Int64)
  fullName: PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer, System.String, System.Int64)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
    name: Ban
    nameWithType: Player.Ban
    fullName: PluginAPI.Core.Player.Ban
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IPlayer
    name: IPlayer
    nameWithType: IPlayer
    fullName: PluginAPI.Core.Interfaces.IPlayer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Ban(PluginAPI.Core.Interfaces.IPlayer,System.String,System.Int64)
    name: Ban
    nameWithType: Player.Ban
    fullName: PluginAPI.Core.Player.Ban
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IPlayer
    name: IPlayer
    nameWithType: IPlayer
    fullName: PluginAPI.Core.Interfaces.IPlayer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Ban(System.String,System.Int64)
  commentId: M:PluginAPI.Core.Player.Ban(System.String,System.Int64)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Ban(String, Int64)
  nameWithType: Player.Ban(String, Int64)
  fullName: PluginAPI.Core.Player.Ban(System.String, System.Int64)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Ban(System.String,System.Int64)
    name: Ban
    nameWithType: Player.Ban
    fullName: PluginAPI.Core.Player.Ban
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Ban(System.String,System.Int64)
    name: Ban
    nameWithType: Player.Ban
    fullName: PluginAPI.Core.Player.Ban
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer,System.String)
  commentId: M:PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer,System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Kick(IPlayer, String)
  nameWithType: Player.Kick(IPlayer, String)
  fullName: PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer, System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer,System.String)
    name: Kick
    nameWithType: Player.Kick
    fullName: PluginAPI.Core.Player.Kick
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IPlayer
    name: IPlayer
    nameWithType: IPlayer
    fullName: PluginAPI.Core.Interfaces.IPlayer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Kick(PluginAPI.Core.Interfaces.IPlayer,System.String)
    name: Kick
    nameWithType: Player.Kick
    fullName: PluginAPI.Core.Player.Kick
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IPlayer
    name: IPlayer
    nameWithType: IPlayer
    fullName: PluginAPI.Core.Interfaces.IPlayer
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Kick(System.String)
  commentId: M:PluginAPI.Core.Player.Kick(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Kick(String)
  nameWithType: Player.Kick(String)
  fullName: PluginAPI.Core.Player.Kick(System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Kick(System.String)
    name: Kick
    nameWithType: Player.Kick
    fullName: PluginAPI.Core.Player.Kick
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Kick(System.String)
    name: Kick
    nameWithType: Player.Kick
    fullName: PluginAPI.Core.Player.Kick
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Mute(System.Boolean)
  commentId: M:PluginAPI.Core.Player.Mute(System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Mute(Boolean)
  nameWithType: Player.Mute(Boolean)
  fullName: PluginAPI.Core.Player.Mute(System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Mute(System.Boolean)
    name: Mute
    nameWithType: Player.Mute
    fullName: PluginAPI.Core.Player.Mute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Mute(System.Boolean)
    name: Mute
    nameWithType: Player.Mute
    fullName: PluginAPI.Core.Player.Mute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Unmute(System.Boolean)
  commentId: M:PluginAPI.Core.Player.Unmute(System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Unmute(Boolean)
  nameWithType: Player.Unmute(Boolean)
  fullName: PluginAPI.Core.Player.Unmute(System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Unmute(System.Boolean)
    name: Unmute
    nameWithType: Player.Unmute
    fullName: PluginAPI.Core.Player.Unmute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Unmute(System.Boolean)
    name: Unmute
    nameWithType: Player.Unmute
    fullName: PluginAPI.Core.Player.Unmute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.IntercomMute(System.Boolean)
  commentId: M:PluginAPI.Core.Player.IntercomMute(System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: IntercomMute(Boolean)
  nameWithType: Player.IntercomMute(Boolean)
  fullName: PluginAPI.Core.Player.IntercomMute(System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.IntercomMute(System.Boolean)
    name: IntercomMute
    nameWithType: Player.IntercomMute
    fullName: PluginAPI.Core.Player.IntercomMute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.IntercomMute(System.Boolean)
    name: IntercomMute
    nameWithType: Player.IntercomMute
    fullName: PluginAPI.Core.Player.IntercomMute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
  commentId: M:PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: IntercomUnmute(Boolean)
  nameWithType: Player.IntercomUnmute(Boolean)
  fullName: PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
    name: IntercomUnmute
    nameWithType: Player.IntercomUnmute
    fullName: PluginAPI.Core.Player.IntercomUnmute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.IntercomUnmute(System.Boolean)
    name: IntercomUnmute
    nameWithType: Player.IntercomUnmute
    fullName: PluginAPI.Core.Player.IntercomUnmute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.AddAmmo(ItemType,System.UInt16)
  commentId: M:PluginAPI.Core.Player.AddAmmo(ItemType,System.UInt16)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: AddAmmo(ItemType, UInt16)
  nameWithType: Player.AddAmmo(ItemType, UInt16)
  fullName: PluginAPI.Core.Player.AddAmmo(ItemType, System.UInt16)
  spec.csharp:
  - uid: PluginAPI.Core.Player.AddAmmo(ItemType,System.UInt16)
    name: AddAmmo
    nameWithType: Player.AddAmmo
    fullName: PluginAPI.Core.Player.AddAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.AddAmmo(ItemType,System.UInt16)
    name: AddAmmo
    nameWithType: Player.AddAmmo
    fullName: PluginAPI.Core.Player.AddAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.AddItem(ItemType)
  commentId: M:PluginAPI.Core.Player.AddItem(ItemType)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: AddItem(ItemType)
  nameWithType: Player.AddItem(ItemType)
  fullName: PluginAPI.Core.Player.AddItem(ItemType)
  spec.csharp:
  - uid: PluginAPI.Core.Player.AddItem(ItemType)
    name: AddItem
    nameWithType: Player.AddItem
    fullName: PluginAPI.Core.Player.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.AddItem(ItemType)
    name: AddItem
    nameWithType: Player.AddItem
    fullName: PluginAPI.Core.Player.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
  commentId: M:PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
  parent: PluginAPI.Core.Player
  name: RemoveItem(Item)
  nameWithType: Player.RemoveItem(Item)
  fullName: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.Item
    name: Item
    nameWithType: Item
    fullName: PluginAPI.Core.Items.Item
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.Item)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.Item
    name: Item
    nameWithType: Item
    fullName: PluginAPI.Core.Items.Item
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
  commentId: M:PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
  parent: PluginAPI.Core.Player
  name: RemoveItem(ItemPickup)
  nameWithType: Player.RemoveItem(ItemPickup)
  fullName: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.ItemPickup
    name: ItemPickup
    nameWithType: ItemPickup
    fullName: PluginAPI.Core.Items.ItemPickup
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RemoveItem(PluginAPI.Core.Items.ItemPickup)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.ItemPickup
    name: ItemPickup
    nameWithType: ItemPickup
    fullName: PluginAPI.Core.Items.ItemPickup
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
  commentId: M:PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: RemoveItem(ItemPickupBase)
  nameWithType: Player.RemoveItem(ItemPickupBase)
  fullName: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.Pickups.ItemPickupBase
    name: ItemPickupBase
    nameWithType: ItemPickupBase
    fullName: InventorySystem.Items.Pickups.ItemPickupBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.Pickups.ItemPickupBase)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.Pickups.ItemPickupBase
    name: ItemPickupBase
    nameWithType: ItemPickupBase
    fullName: InventorySystem.Items.Pickups.ItemPickupBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
  commentId: M:PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: RemoveItem(ItemBase)
  nameWithType: Player.RemoveItem(ItemBase)
  fullName: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.ItemBase
    name: ItemBase
    nameWithType: ItemBase
    fullName: InventorySystem.Items.ItemBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RemoveItem(InventorySystem.Items.ItemBase)
    name: RemoveItem
    nameWithType: Player.RemoveItem
    fullName: PluginAPI.Core.Player.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.ItemBase
    name: ItemBase
    nameWithType: ItemBase
    fullName: InventorySystem.Items.ItemBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RemoveItems(ItemType,System.Int32)
  commentId: M:PluginAPI.Core.Player.RemoveItems(ItemType,System.Int32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: RemoveItems(ItemType, Int32)
  nameWithType: Player.RemoveItems(ItemType, Int32)
  fullName: PluginAPI.Core.Player.RemoveItems(ItemType, System.Int32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RemoveItems(ItemType,System.Int32)
    name: RemoveItems
    nameWithType: Player.RemoveItems
    fullName: PluginAPI.Core.Player.RemoveItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RemoveItems(ItemType,System.Int32)
    name: RemoveItems
    nameWithType: Player.RemoveItems
    fullName: PluginAPI.Core.Player.RemoveItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
  commentId: M:PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
  parent: PluginAPI.Core.Player
  name: DropItem(Item)
  nameWithType: Player.DropItem(Item)
  fullName: PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
  spec.csharp:
  - uid: PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.Item
    name: Item
    nameWithType: Item
    fullName: PluginAPI.Core.Items.Item
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.DropItem(PluginAPI.Core.Items.Item)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Items.Item
    name: Item
    nameWithType: Item
    fullName: PluginAPI.Core.Items.Item
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
  commentId: M:PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: DropItem(ItemBase)
  nameWithType: Player.DropItem(ItemBase)
  fullName: PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
  spec.csharp:
  - uid: PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.ItemBase
    name: ItemBase
    nameWithType: ItemBase
    fullName: InventorySystem.Items.ItemBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.DropItem(InventorySystem.Items.ItemBase)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: InventorySystem.Items.ItemBase
    name: ItemBase
    nameWithType: ItemBase
    fullName: InventorySystem.Items.ItemBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.DropItem(System.UInt16)
  commentId: M:PluginAPI.Core.Player.DropItem(System.UInt16)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: DropItem(UInt16)
  nameWithType: Player.DropItem(UInt16)
  fullName: PluginAPI.Core.Player.DropItem(System.UInt16)
  spec.csharp:
  - uid: PluginAPI.Core.Player.DropItem(System.UInt16)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.DropItem(System.UInt16)
    name: DropItem
    nameWithType: Player.DropItem
    fullName: PluginAPI.Core.Player.DropItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.SetAmmo(ItemType,System.UInt16)
  commentId: M:PluginAPI.Core.Player.SetAmmo(ItemType,System.UInt16)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: SetAmmo(ItemType, UInt16)
  nameWithType: Player.SetAmmo(ItemType, UInt16)
  fullName: PluginAPI.Core.Player.SetAmmo(ItemType, System.UInt16)
  spec.csharp:
  - uid: PluginAPI.Core.Player.SetAmmo(ItemType,System.UInt16)
    name: SetAmmo
    nameWithType: Player.SetAmmo
    fullName: PluginAPI.Core.Player.SetAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.SetAmmo(ItemType,System.UInt16)
    name: SetAmmo
    nameWithType: Player.SetAmmo
    fullName: PluginAPI.Core.Player.SetAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetAmmo(ItemType)
  commentId: M:PluginAPI.Core.Player.GetAmmo(ItemType)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: GetAmmo(ItemType)
  nameWithType: Player.GetAmmo(ItemType)
  fullName: PluginAPI.Core.Player.GetAmmo(ItemType)
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetAmmo(ItemType)
    name: GetAmmo
    nameWithType: Player.GetAmmo
    fullName: PluginAPI.Core.Player.GetAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetAmmo(ItemType)
    name: GetAmmo
    nameWithType: Player.GetAmmo
    fullName: PluginAPI.Core.Player.GetAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.DropAmmo(ItemType,System.UInt16,System.Boolean)
  commentId: M:PluginAPI.Core.Player.DropAmmo(ItemType,System.UInt16,System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: DropAmmo(ItemType, UInt16, Boolean)
  nameWithType: Player.DropAmmo(ItemType, UInt16, Boolean)
  fullName: PluginAPI.Core.Player.DropAmmo(ItemType, System.UInt16, System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.DropAmmo(ItemType,System.UInt16,System.Boolean)
    name: DropAmmo
    nameWithType: Player.DropAmmo
    fullName: PluginAPI.Core.Player.DropAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.DropAmmo(ItemType,System.UInt16,System.Boolean)
    name: DropAmmo
    nameWithType: Player.DropAmmo
    fullName: PluginAPI.Core.Player.DropAmmo
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.DropEverything
  commentId: M:PluginAPI.Core.Player.DropEverything
  parent: PluginAPI.Core.Player
  name: DropEverything()
  nameWithType: Player.DropEverything()
  fullName: PluginAPI.Core.Player.DropEverything()
  spec.csharp:
  - uid: PluginAPI.Core.Player.DropEverything
    name: DropEverything
    nameWithType: Player.DropEverything
    fullName: PluginAPI.Core.Player.DropEverything
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.DropEverything
    name: DropEverything
    nameWithType: Player.DropEverything
    fullName: PluginAPI.Core.Player.DropEverything
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.ClearInventory(System.Boolean,System.Boolean)
  commentId: M:PluginAPI.Core.Player.ClearInventory(System.Boolean,System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: ClearInventory(Boolean, Boolean)
  nameWithType: Player.ClearInventory(Boolean, Boolean)
  fullName: PluginAPI.Core.Player.ClearInventory(System.Boolean, System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.ClearInventory(System.Boolean,System.Boolean)
    name: ClearInventory
    nameWithType: Player.ClearInventory
    fullName: PluginAPI.Core.Player.ClearInventory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.ClearInventory(System.Boolean,System.Boolean)
    name: ClearInventory
    nameWithType: Player.ClearInventory
    fullName: PluginAPI.Core.Player.ClearInventory
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.SetGroup(UserGroup)
  commentId: M:PluginAPI.Core.Player.SetGroup(UserGroup)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: SetGroup(UserGroup)
  nameWithType: Player.SetGroup(UserGroup)
  fullName: PluginAPI.Core.Player.SetGroup(UserGroup)
  spec.csharp:
  - uid: PluginAPI.Core.Player.SetGroup(UserGroup)
    name: SetGroup
    nameWithType: Player.SetGroup
    fullName: PluginAPI.Core.Player.SetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: UserGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.SetGroup(UserGroup)
    name: SetGroup
    nameWithType: Player.SetGroup
    fullName: PluginAPI.Core.Player.SetGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: UserGroup
    name: UserGroup
    nameWithType: UserGroup
    fullName: UserGroup
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Heal(System.Single)
  commentId: M:PluginAPI.Core.Player.Heal(System.Single)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Heal(Single)
  nameWithType: Player.Heal(Single)
  fullName: PluginAPI.Core.Player.Heal(System.Single)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Heal(System.Single)
    name: Heal
    nameWithType: Player.Heal
    fullName: PluginAPI.Core.Player.Heal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Heal(System.Single)
    name: Heal
    nameWithType: Player.Heal
    fullName: PluginAPI.Core.Player.Heal
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId,PlayerRoles.RoleChangeReason)
  commentId: M:PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId,PlayerRoles.RoleChangeReason)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: SetRole(RoleTypeId, RoleChangeReason)
  nameWithType: Player.SetRole(RoleTypeId, RoleChangeReason)
  fullName: PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId, PlayerRoles.RoleChangeReason)
  spec.csharp:
  - uid: PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId,PlayerRoles.RoleChangeReason)
    name: SetRole
    nameWithType: Player.SetRole
    fullName: PluginAPI.Core.Player.SetRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: PlayerRoles.RoleTypeId
    name: RoleTypeId
    nameWithType: RoleTypeId
    fullName: PlayerRoles.RoleTypeId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PlayerRoles.RoleChangeReason
    name: RoleChangeReason
    nameWithType: RoleChangeReason
    fullName: PlayerRoles.RoleChangeReason
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.SetRole(PlayerRoles.RoleTypeId,PlayerRoles.RoleChangeReason)
    name: SetRole
    nameWithType: Player.SetRole
    fullName: PluginAPI.Core.Player.SetRole
  - name: (
    nameWithType: (
    fullName: (
  - uid: PlayerRoles.RoleTypeId
    name: RoleTypeId
    nameWithType: RoleTypeId
    fullName: PlayerRoles.RoleTypeId
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PlayerRoles.RoleChangeReason
    name: RoleChangeReason
    nameWithType: RoleChangeReason
    fullName: PlayerRoles.RoleChangeReason
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Disconnect(System.String)
  commentId: M:PluginAPI.Core.Player.Disconnect(System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Disconnect(String)
  nameWithType: Player.Disconnect(String)
  fullName: PluginAPI.Core.Player.Disconnect(System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Disconnect(System.String)
    name: Disconnect
    nameWithType: Player.Disconnect
    fullName: PluginAPI.Core.Player.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Disconnect(System.String)
    name: Disconnect
    nameWithType: Player.Disconnect
    fullName: PluginAPI.Core.Player.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.ReceiveHint(System.String,System.Single)
  commentId: M:PluginAPI.Core.Player.ReceiveHint(System.String,System.Single)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: ReceiveHint(String, Single)
  nameWithType: Player.ReceiveHint(String, Single)
  fullName: PluginAPI.Core.Player.ReceiveHint(System.String, System.Single)
  spec.csharp:
  - uid: PluginAPI.Core.Player.ReceiveHint(System.String,System.Single)
    name: ReceiveHint
    nameWithType: Player.ReceiveHint
    fullName: PluginAPI.Core.Player.ReceiveHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.ReceiveHint(System.String,System.Single)
    name: ReceiveHint
    nameWithType: Player.ReceiveHint
    fullName: PluginAPI.Core.Player.ReceiveHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.ReceiveHint(System.String,Hints.HintEffect[],System.Single)
  commentId: M:PluginAPI.Core.Player.ReceiveHint(System.String,Hints.HintEffect[],System.Single)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: ReceiveHint(String, HintEffect[], Single)
  nameWithType: Player.ReceiveHint(String, HintEffect[], Single)
  fullName: PluginAPI.Core.Player.ReceiveHint(System.String, Hints.HintEffect[], System.Single)
  nameWithType.vb: Player.ReceiveHint(String, HintEffect(), Single)
  fullName.vb: PluginAPI.Core.Player.ReceiveHint(System.String, Hints.HintEffect(), System.Single)
  name.vb: ReceiveHint(String, HintEffect(), Single)
  spec.csharp:
  - uid: PluginAPI.Core.Player.ReceiveHint(System.String,Hints.HintEffect[],System.Single)
    name: ReceiveHint
    nameWithType: Player.ReceiveHint
    fullName: PluginAPI.Core.Player.ReceiveHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hints.HintEffect
    name: HintEffect
    nameWithType: HintEffect
    fullName: Hints.HintEffect
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.ReceiveHint(System.String,Hints.HintEffect[],System.Single)
    name: ReceiveHint
    nameWithType: Player.ReceiveHint
    fullName: PluginAPI.Core.Player.ReceiveHint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Hints.HintEffect
    name: HintEffect
    nameWithType: HintEffect
    fullName: Hints.HintEffect
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
  commentId: M:PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: ReceiveHitMarker(Single)
  nameWithType: Player.ReceiveHitMarker(Single)
  fullName: PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
  spec.csharp:
  - uid: PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
    name: ReceiveHitMarker
    nameWithType: Player.ReceiveHitMarker
    fullName: PluginAPI.Core.Player.ReceiveHitMarker
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.ReceiveHitMarker(System.Single)
    name: ReceiveHitMarker
    nameWithType: Player.ReceiveHitMarker
    fullName: PluginAPI.Core.Player.ReceiveHitMarker
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetStatModule``1
  commentId: M:PluginAPI.Core.Player.GetStatModule``1
  parent: PluginAPI.Core.Player
  name: GetStatModule<T>()
  nameWithType: Player.GetStatModule<T>()
  fullName: PluginAPI.Core.Player.GetStatModule<T>()
  nameWithType.vb: Player.GetStatModule(Of T)()
  fullName.vb: PluginAPI.Core.Player.GetStatModule(Of T)()
  name.vb: GetStatModule(Of T)()
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetStatModule``1
    name: GetStatModule<T>
    nameWithType: Player.GetStatModule<T>
    fullName: PluginAPI.Core.Player.GetStatModule<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetStatModule``1
    name: GetStatModule(Of T)
    nameWithType: Player.GetStatModule(Of T)
    fullName: PluginAPI.Core.Player.GetStatModule(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.RedirectToServer(System.UInt16)
  commentId: M:PluginAPI.Core.Player.RedirectToServer(System.UInt16)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: RedirectToServer(UInt16)
  nameWithType: Player.RedirectToServer(UInt16)
  fullName: PluginAPI.Core.Player.RedirectToServer(System.UInt16)
  spec.csharp:
  - uid: PluginAPI.Core.Player.RedirectToServer(System.UInt16)
    name: RedirectToServer
    nameWithType: Player.RedirectToServer
    fullName: PluginAPI.Core.Player.RedirectToServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.RedirectToServer(System.UInt16)
    name: RedirectToServer
    nameWithType: Player.RedirectToServer
    fullName: PluginAPI.Core.Player.RedirectToServer
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt16
    name: UInt16
    nameWithType: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Reconnect(System.Single,System.Boolean)
  commentId: M:PluginAPI.Core.Player.Reconnect(System.Single,System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Reconnect(Single, Boolean)
  nameWithType: Player.Reconnect(Single, Boolean)
  fullName: PluginAPI.Core.Player.Reconnect(System.Single, System.Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Reconnect(System.Single,System.Boolean)
    name: Reconnect
    nameWithType: Player.Reconnect
    fullName: PluginAPI.Core.Player.Reconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Reconnect(System.Single,System.Boolean)
    name: Reconnect
    nameWithType: Player.Reconnect
    fullName: PluginAPI.Core.Player.Reconnect
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Kill
  commentId: M:PluginAPI.Core.Player.Kill
  parent: PluginAPI.Core.Player
  name: Kill()
  nameWithType: Player.Kill()
  fullName: PluginAPI.Core.Player.Kill()
  spec.csharp:
  - uid: PluginAPI.Core.Player.Kill
    name: Kill
    nameWithType: Player.Kill
    fullName: PluginAPI.Core.Player.Kill
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Kill
    name: Kill
    nameWithType: Player.Kill
    fullName: PluginAPI.Core.Player.Kill
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Kill(System.String,System.String)
  commentId: M:PluginAPI.Core.Player.Kill(System.String,System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Kill(String, String)
  nameWithType: Player.Kill(String, String)
  fullName: PluginAPI.Core.Player.Kill(System.String, System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Kill(System.String,System.String)
    name: Kill
    nameWithType: Player.Kill
    fullName: PluginAPI.Core.Player.Kill
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Kill(System.String,System.String)
    name: Kill
    nameWithType: Player.Kill
    fullName: PluginAPI.Core.Player.Kill
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Damage(System.Single,System.String,System.String)
  commentId: M:PluginAPI.Core.Player.Damage(System.Single,System.String,System.String)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Damage(Single, String, String)
  nameWithType: Player.Damage(Single, String, String)
  fullName: PluginAPI.Core.Player.Damage(System.Single, System.String, System.String)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Damage(System.Single,System.String,System.String)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Damage(System.Single,System.String,System.String)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Damage(System.Single,PluginAPI.Core.Player,UnityEngine.Vector3,System.Int32)
  commentId: M:PluginAPI.Core.Player.Damage(System.Single,PluginAPI.Core.Player,UnityEngine.Vector3,System.Int32)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Damage(Single, Player, Vector3, Int32)
  nameWithType: Player.Damage(Single, Player, Vector3, Int32)
  fullName: PluginAPI.Core.Player.Damage(System.Single, PluginAPI.Core.Player, UnityEngine.Vector3, System.Int32)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Damage(System.Single,PluginAPI.Core.Player,UnityEngine.Vector3,System.Int32)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Damage(System.Single,PluginAPI.Core.Player,UnityEngine.Vector3,System.Int32)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: UnityEngine.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: UnityEngine.Vector3
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
  commentId: M:PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: Damage(DamageHandlerBase)
  nameWithType: Player.Damage(DamageHandlerBase)
  fullName: PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
  spec.csharp:
  - uid: PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: PlayerStatsSystem.DamageHandlerBase
    name: DamageHandlerBase
    nameWithType: DamageHandlerBase
    fullName: PlayerStatsSystem.DamageHandlerBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.Damage(PlayerStatsSystem.DamageHandlerBase)
    name: Damage
    nameWithType: Player.Damage
    fullName: PluginAPI.Core.Player.Damage
  - name: (
    nameWithType: (
    fullName: (
  - uid: PlayerStatsSystem.DamageHandlerBase
    name: DamageHandlerBase
    nameWithType: DamageHandlerBase
    fullName: PlayerStatsSystem.DamageHandlerBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.OnStart
  commentId: M:PluginAPI.Core.Player.OnStart
  parent: PluginAPI.Core.Player
  name: OnStart()
  nameWithType: Player.OnStart()
  fullName: PluginAPI.Core.Player.OnStart()
  spec.csharp:
  - uid: PluginAPI.Core.Player.OnStart
    name: OnStart
    nameWithType: Player.OnStart
    fullName: PluginAPI.Core.Player.OnStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.OnStart
    name: OnStart
    nameWithType: Player.OnStart
    fullName: PluginAPI.Core.Player.OnStart
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.OnDestroy
  commentId: M:PluginAPI.Core.Player.OnDestroy
  parent: PluginAPI.Core.Player
  name: OnDestroy()
  nameWithType: Player.OnDestroy()
  fullName: PluginAPI.Core.Player.OnDestroy()
  spec.csharp:
  - uid: PluginAPI.Core.Player.OnDestroy
    name: OnDestroy
    nameWithType: Player.OnDestroy
    fullName: PluginAPI.Core.Player.OnDestroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.OnDestroy
    name: OnDestroy
    nameWithType: Player.OnDestroy
    fullName: PluginAPI.Core.Player.OnDestroy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.OnUpdate
  commentId: M:PluginAPI.Core.Player.OnUpdate
  parent: PluginAPI.Core.Player
  name: OnUpdate()
  nameWithType: Player.OnUpdate()
  fullName: PluginAPI.Core.Player.OnUpdate()
  spec.csharp:
  - uid: PluginAPI.Core.Player.OnUpdate
    name: OnUpdate
    nameWithType: Player.OnUpdate
    fullName: PluginAPI.Core.Player.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.OnUpdate
    name: OnUpdate
    nameWithType: Player.OnUpdate
    fullName: PluginAPI.Core.Player.OnUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.OnLateUpdate
  commentId: M:PluginAPI.Core.Player.OnLateUpdate
  parent: PluginAPI.Core.Player
  name: OnLateUpdate()
  nameWithType: Player.OnLateUpdate()
  fullName: PluginAPI.Core.Player.OnLateUpdate()
  spec.csharp:
  - uid: PluginAPI.Core.Player.OnLateUpdate
    name: OnLateUpdate
    nameWithType: Player.OnLateUpdate
    fullName: PluginAPI.Core.Player.OnLateUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.OnLateUpdate
    name: OnLateUpdate
    nameWithType: Player.OnLateUpdate
    fullName: PluginAPI.Core.Player.OnLateUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.OnFixedUpdate
  commentId: M:PluginAPI.Core.Player.OnFixedUpdate
  parent: PluginAPI.Core.Player
  name: OnFixedUpdate()
  nameWithType: Player.OnFixedUpdate()
  fullName: PluginAPI.Core.Player.OnFixedUpdate()
  spec.csharp:
  - uid: PluginAPI.Core.Player.OnFixedUpdate
    name: OnFixedUpdate
    nameWithType: Player.OnFixedUpdate
    fullName: PluginAPI.Core.Player.OnFixedUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.OnFixedUpdate
    name: OnFixedUpdate
    nameWithType: Player.OnFixedUpdate
    fullName: PluginAPI.Core.Player.OnFixedUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.GetComponent``1(System.Boolean)
  commentId: M:PluginAPI.Core.Player.GetComponent``1(System.Boolean)
  parent: PluginAPI.Core.Player
  isExternal: true
  name: GetComponent<T>(Boolean)
  nameWithType: Player.GetComponent<T>(Boolean)
  fullName: PluginAPI.Core.Player.GetComponent<T>(System.Boolean)
  nameWithType.vb: Player.GetComponent(Of T)(Boolean)
  fullName.vb: PluginAPI.Core.Player.GetComponent(Of T)(System.Boolean)
  name.vb: GetComponent(Of T)(Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.GetComponent``1(System.Boolean)
    name: GetComponent<T>
    nameWithType: Player.GetComponent<T>
    fullName: PluginAPI.Core.Player.GetComponent<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.GetComponent``1(System.Boolean)
    name: GetComponent(Of T)
    nameWithType: Player.GetComponent(Of T)
    fullName: PluginAPI.Core.Player.GetComponent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGetComponent``1({T}@,System.Boolean)
  commentId: M:PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
  parent: PluginAPI.Core.Player
  definition: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
  name: TryGetComponent<T>(T, Boolean)
  nameWithType: Player.TryGetComponent<T>(T, Boolean)
  fullName: PluginAPI.Core.Player.TryGetComponent<T>(T, System.Boolean)
  nameWithType.vb: Player.TryGetComponent(Of T)(T, Boolean)
  fullName.vb: PluginAPI.Core.Player.TryGetComponent(Of T)(T, System.Boolean)
  name.vb: TryGetComponent(Of T)(T, Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
    name: TryGetComponent<T>
    nameWithType: Player.TryGetComponent<T>
    fullName: PluginAPI.Core.Player.TryGetComponent<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
    name: TryGetComponent(Of T)
    nameWithType: Player.TryGetComponent(Of T)
    fullName: PluginAPI.Core.Player.TryGetComponent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.PluginAPI.Core.PlayerExtensions.GetAmmoLimit(ItemType)
  commentId: M:PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
  parent: PluginAPI.Core.PlayerExtensions
  definition: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
  name: GetAmmoLimit(ItemType)
  nameWithType: PlayerExtensions.GetAmmoLimit(ItemType)
  fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(ItemType)
  spec.csharp:
  - uid: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(ItemType)
    name: GetAmmoLimit
    nameWithType: PlayerExtensions.GetAmmoLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(ItemType)
    name: GetAmmoLimit
    nameWithType: PlayerExtensions.GetAmmoLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.PluginAPI.Core.PlayerExtensions.GetCategoryLimit(ItemCategory)
  commentId: M:PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
  parent: PluginAPI.Core.PlayerExtensions
  definition: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
  name: GetCategoryLimit(ItemCategory)
  nameWithType: PlayerExtensions.GetCategoryLimit(ItemCategory)
  fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(ItemCategory)
  spec.csharp:
  - uid: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(ItemCategory)
    name: GetCategoryLimit
    nameWithType: PlayerExtensions.GetCategoryLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemCategory
    name: ItemCategory
    nameWithType: ItemCategory
    fullName: ItemCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(ItemCategory)
    name: GetCategoryLimit
    nameWithType: PlayerExtensions.GetCategoryLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: ItemCategory
    name: ItemCategory
    nameWithType: ItemCategory
    fullName: ItemCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: PluginAPI.Core.Interfaces
  commentId: N:PluginAPI.Core.Interfaces
  name: PluginAPI.Core.Interfaces
  nameWithType: PluginAPI.Core.Interfaces
  fullName: PluginAPI.Core.Interfaces
- uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
  name: TryGet<T>(IGameComponent, T)
  nameWithType: Player.TryGet<T>(IGameComponent, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(PluginAPI.Core.Interfaces.IGameComponent, T)
  nameWithType.vb: Player.TryGet(Of T)(IGameComponent, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(PluginAPI.Core.Interfaces.IGameComponent, T)
  name.vb: TryGet(Of T)(IGameComponent, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(PluginAPI.Core.Interfaces.IGameComponent,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Interfaces.IGameComponent
    name: IGameComponent
    nameWithType: IGameComponent
    fullName: PluginAPI.Core.Interfaces.IGameComponent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
  isExternal: true
  name: TryGet<T>(GameObject, T)
  nameWithType: Player.TryGet<T>(GameObject, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(UnityEngine.GameObject, T)
  nameWithType.vb: Player.TryGet(Of T)(GameObject, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(UnityEngine.GameObject, T)
  name.vb: TryGet(Of T)(GameObject, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(UnityEngine.GameObject,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: UnityEngine.GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: UnityEngine.GameObject
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
  isExternal: true
  name: TryGet<T>(ReferenceHub, T)
  nameWithType: Player.TryGet<T>(ReferenceHub, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(ReferenceHub, T)
  nameWithType.vb: Player.TryGet(Of T)(ReferenceHub, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(ReferenceHub, T)
  name.vb: TryGet(Of T)(ReferenceHub, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(ReferenceHub,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: ReferenceHub
    name: ReferenceHub
    nameWithType: ReferenceHub
    fullName: ReferenceHub
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
  isExternal: true
  name: TryGet<T>(NetworkIdentity, T)
  nameWithType: Player.TryGet<T>(NetworkIdentity, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(Mirror.NetworkIdentity, T)
  nameWithType.vb: Player.TryGet(Of T)(NetworkIdentity, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(Mirror.NetworkIdentity, T)
  name.vb: TryGet(Of T)(NetworkIdentity, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(Mirror.NetworkIdentity,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mirror.NetworkIdentity
    name: NetworkIdentity
    nameWithType: NetworkIdentity
    fullName: Mirror.NetworkIdentity
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
  commentId: M:PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
  isExternal: true
  name: TryGetByName<T>(String, T)
  nameWithType: Player.TryGetByName<T>(String, T)
  fullName: PluginAPI.Core.Player.TryGetByName<T>(System.String, T)
  nameWithType.vb: Player.TryGetByName(Of T)(String, T)
  fullName.vb: PluginAPI.Core.Player.TryGetByName(Of T)(System.String, T)
  name.vb: TryGetByName(Of T)(String, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
    name: TryGetByName<T>
    nameWithType: Player.TryGetByName<T>
    fullName: PluginAPI.Core.Player.TryGetByName<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGetByName``1(System.String,``0@)
    name: TryGetByName(Of T)
    nameWithType: Player.TryGetByName(Of T)
    fullName: PluginAPI.Core.Player.TryGetByName(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
  isExternal: true
  name: TryGet<T>(Int32, T)
  nameWithType: Player.TryGet<T>(Int32, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.Int32, T)
  nameWithType.vb: Player.TryGet(Of T)(Int32, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.Int32, T)
  name.vb: TryGet(Of T)(Int32, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.Int32,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.String,``0@)
  isExternal: true
  name: TryGet<T>(String, T)
  nameWithType: Player.TryGet<T>(String, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.String, T)
  nameWithType.vb: Player.TryGet(Of T)(String, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.String, T)
  name.vb: TryGet(Of T)(String, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.String,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
  isExternal: true
  name: TryGet<T>(UInt32, T)
  nameWithType: Player.TryGet<T>(UInt32, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(System.UInt32, T)
  nameWithType.vb: Player.TryGet(Of T)(UInt32, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(System.UInt32, T)
  name.vb: TryGet(Of T)(UInt32, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(System.UInt32,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
  commentId: M:PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
  isExternal: true
  name: TryGet<T>(ICommandSender, T)
  nameWithType: Player.TryGet<T>(ICommandSender, T)
  fullName: PluginAPI.Core.Player.TryGet<T>(CommandSystem.ICommandSender, T)
  nameWithType.vb: Player.TryGet(Of T)(ICommandSender, T)
  fullName.vb: PluginAPI.Core.Player.TryGet(Of T)(CommandSystem.ICommandSender, T)
  name.vb: TryGet(Of T)(ICommandSender, T)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
    name: TryGet<T>
    nameWithType: Player.TryGet<T>
    fullName: PluginAPI.Core.Player.TryGet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGet``1(CommandSystem.ICommandSender,``0@)
    name: TryGet(Of T)
    nameWithType: Player.TryGet(Of T)
    fullName: PluginAPI.Core.Player.TryGet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: CommandSystem.ICommandSender
    name: ICommandSender
    nameWithType: ICommandSender
    fullName: CommandSystem.ICommandSender
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
  commentId: M:PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
  isExternal: true
  name: TryGetComponent<T>(T, Boolean)
  nameWithType: Player.TryGetComponent<T>(T, Boolean)
  fullName: PluginAPI.Core.Player.TryGetComponent<T>(T, System.Boolean)
  nameWithType.vb: Player.TryGetComponent(Of T)(T, Boolean)
  fullName.vb: PluginAPI.Core.Player.TryGetComponent(Of T)(T, System.Boolean)
  name.vb: TryGetComponent(Of T)(T, Boolean)
  spec.csharp:
  - uid: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
    name: TryGetComponent<T>
    nameWithType: Player.TryGetComponent<T>
    fullName: PluginAPI.Core.Player.TryGetComponent<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.Player.TryGetComponent``1(``0@,System.Boolean)
    name: TryGetComponent(Of T)
    nameWithType: Player.TryGetComponent(Of T)
    fullName: PluginAPI.Core.Player.TryGetComponent(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
  commentId: M:PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
  isExternal: true
  name: GetAmmoLimit(Player, ItemType)
  nameWithType: PlayerExtensions.GetAmmoLimit(Player, ItemType)
  fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player, ItemType)
  spec.csharp:
  - uid: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
    name: GetAmmoLimit
    nameWithType: PlayerExtensions.GetAmmoLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.PlayerExtensions.GetAmmoLimit(PluginAPI.Core.Player,ItemType)
    name: GetAmmoLimit
    nameWithType: PlayerExtensions.GetAmmoLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetAmmoLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ItemType
    name: ItemType
    nameWithType: ItemType
    fullName: ItemType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.PlayerExtensions
  commentId: T:PluginAPI.Core.PlayerExtensions
  parent: PluginAPI.Core
  name: PlayerExtensions
  nameWithType: PlayerExtensions
  fullName: PluginAPI.Core.PlayerExtensions
- uid: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
  commentId: M:PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
  isExternal: true
  name: GetCategoryLimit(Player, ItemCategory)
  nameWithType: PlayerExtensions.GetCategoryLimit(Player, ItemCategory)
  fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player, ItemCategory)
  spec.csharp:
  - uid: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
    name: GetCategoryLimit
    nameWithType: PlayerExtensions.GetCategoryLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ItemCategory
    name: ItemCategory
    nameWithType: ItemCategory
    fullName: ItemCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: PluginAPI.Core.PlayerExtensions.GetCategoryLimit(PluginAPI.Core.Player,ItemCategory)
    name: GetCategoryLimit
    nameWithType: PlayerExtensions.GetCategoryLimit
    fullName: PluginAPI.Core.PlayerExtensions.GetCategoryLimit
  - name: (
    nameWithType: (
    fullName: (
  - uid: PluginAPI.Core.Player
    name: Player
    nameWithType: Player
    fullName: PluginAPI.Core.Player
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ItemCategory
    name: ItemCategory
    nameWithType: ItemCategory
    fullName: ItemCategory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: PluginAPI.Core.Server
  commentId: T:PluginAPI.Core.Server
  parent: PluginAPI.Core
  name: Server
  nameWithType: Server
  fullName: PluginAPI.Core.Server
- uid: PluginAPI.Core.Server.Instance*
  commentId: Overload:PluginAPI.Core.Server.Instance
  name: Instance
  nameWithType: Server.Instance
  fullName: PluginAPI.Core.Server.Instance
- uid: PluginAPI.Core.Server.Init*
  commentId: Overload:PluginAPI.Core.Server.Init
  name: Init
  nameWithType: Server.Init
  fullName: PluginAPI.Core.Server.Init
- uid: PluginAPI.Core.Server.#ctor*
  commentId: Overload:PluginAPI.Core.Server.#ctor
  name: Server
  nameWithType: Server.Server
  fullName: PluginAPI.Core.Server.Server
- uid: PluginAPI.Core.Interfaces.IGameComponent
  commentId: T:PluginAPI.Core.Interfaces.IGameComponent
  parent: PluginAPI.Core.Interfaces
  name: IGameComponent
  nameWithType: IGameComponent
  fullName: PluginAPI.Core.Interfaces.IGameComponent
- uid: PluginAPI.Core.Server.ServerIpAddress*
  commentId: Overload:PluginAPI.Core.Server.ServerIpAddress
  name: ServerIpAddress
  nameWithType: Server.ServerIpAddress
  fullName: PluginAPI.Core.Server.ServerIpAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PluginAPI.Core.Server.Port*
  commentId: Overload:PluginAPI.Core.Server.Port
  name: Port
  nameWithType: Server.Port
  fullName: PluginAPI.Core.Server.Port
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: PluginAPI.Core.Server.FriendlyFire*
  commentId: Overload:PluginAPI.Core.Server.FriendlyFire
  name: FriendlyFire
  nameWithType: Server.FriendlyFire
  fullName: PluginAPI.Core.Server.FriendlyFire
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: PluginAPI.Core.Server.PlayerCount*
  commentId: Overload:PluginAPI.Core.Server.PlayerCount
  name: PlayerCount
  nameWithType: Server.PlayerCount
  fullName: PluginAPI.Core.Server.PlayerCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: PluginAPI.Core.Server.MaxPlayers*
  commentId: Overload:PluginAPI.Core.Server.MaxPlayers
  name: MaxPlayers
  nameWithType: Server.MaxPlayers
  fullName: PluginAPI.Core.Server.MaxPlayers
- uid: PluginAPI.Core.Server.ReservedSlots*
  commentId: Overload:PluginAPI.Core.Server.ReservedSlots
  name: ReservedSlots
  nameWithType: Server.ReservedSlots
  fullName: PluginAPI.Core.Server.ReservedSlots
- uid: PluginAPI.Core.Server.Broadcast*
  commentId: Overload:PluginAPI.Core.Server.Broadcast
  name: Broadcast
  nameWithType: Server.Broadcast
  fullName: PluginAPI.Core.Server.Broadcast
- uid: Broadcast
  commentId: T:Broadcast
  isExternal: true
  name: Broadcast
  nameWithType: Broadcast
  fullName: Broadcast
- uid: PluginAPI.Core.Server.PermissionsHandler
  commentId: P:PluginAPI.Core.Server.PermissionsHandler
  isExternal: true
- uid: PluginAPI.Core.Server.PermissionsHandler*
  commentId: Overload:PluginAPI.Core.Server.PermissionsHandler
  name: PermissionsHandler
  nameWithType: Server.PermissionsHandler
  fullName: PluginAPI.Core.Server.PermissionsHandler
- uid: PermissionsHandler
  commentId: T:PermissionsHandler
  isExternal: true
  name: PermissionsHandler
  nameWithType: PermissionsHandler
  fullName: PermissionsHandler
- uid: PluginAPI.Core.Server.TPS*
  commentId: Overload:PluginAPI.Core.Server.TPS
  name: TPS
  nameWithType: Server.TPS
  fullName: PluginAPI.Core.Server.TPS
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: PluginAPI.Core.Server.SpawnProtectDuration*
  commentId: Overload:PluginAPI.Core.Server.SpawnProtectDuration
  name: SpawnProtectDuration
  nameWithType: Server.SpawnProtectDuration
  fullName: PluginAPI.Core.Server.SpawnProtectDuration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: PluginAPI.Core.Server.IsHeavilyModded*
  commentId: Overload:PluginAPI.Core.Server.IsHeavilyModded
  name: IsHeavilyModded
  nameWithType: Server.IsHeavilyModded
  fullName: PluginAPI.Core.Server.IsHeavilyModded
- uid: PluginAPI.Core.Server.BanPlayer*
  commentId: Overload:PluginAPI.Core.Server.BanPlayer
  name: BanPlayer
  nameWithType: Server.BanPlayer
  fullName: PluginAPI.Core.Server.BanPlayer
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: CommandSystem.ICommandSender
  commentId: T:CommandSystem.ICommandSender
  parent: CommandSystem
  isExternal: true
  name: ICommandSender
  nameWithType: ICommandSender
  fullName: CommandSystem.ICommandSender
- uid: CommandSystem
  commentId: N:CommandSystem
  isExternal: true
  name: CommandSystem
  nameWithType: CommandSystem
  fullName: CommandSystem
- uid: PluginAPI.Core.Server.KickPlayer*
  commentId: Overload:PluginAPI.Core.Server.KickPlayer
  name: KickPlayer
  nameWithType: Server.KickPlayer
  fullName: PluginAPI.Core.Server.KickPlayer
- uid: PluginAPI.Core.Server.BanPlayerByUserId*
  commentId: Overload:PluginAPI.Core.Server.BanPlayerByUserId
  name: BanPlayerByUserId
  nameWithType: Server.BanPlayerByUserId
  fullName: PluginAPI.Core.Server.BanPlayerByUserId
- uid: PluginAPI.Core.Server.BanPlayerByIpAddress*
  commentId: Overload:PluginAPI.Core.Server.BanPlayerByIpAddress
  name: BanPlayerByIpAddress
  nameWithType: Server.BanPlayerByIpAddress
  fullName: PluginAPI.Core.Server.BanPlayerByIpAddress
- uid: PluginAPI.Core.Server.UnbanPlayerByUserId*
  commentId: Overload:PluginAPI.Core.Server.UnbanPlayerByUserId
  name: UnbanPlayerByUserId
  nameWithType: Server.UnbanPlayerByUserId
  fullName: PluginAPI.Core.Server.UnbanPlayerByUserId
- uid: PluginAPI.Core.Server.UnbanPlayerByIpAddress*
  commentId: Overload:PluginAPI.Core.Server.UnbanPlayerByIpAddress
  name: UnbanPlayerByIpAddress
  nameWithType: Server.UnbanPlayerByIpAddress
  fullName: PluginAPI.Core.Server.UnbanPlayerByIpAddress
- uid: PluginAPI.Core.Server.IsPlayerBanned*
  commentId: Overload:PluginAPI.Core.Server.IsPlayerBanned
  name: IsPlayerBanned
  nameWithType: Server.IsPlayerBanned
  fullName: PluginAPI.Core.Server.IsPlayerBanned
- uid: PluginAPI.Core.Server.GetAllPlayersBanned*
  commentId: Overload:PluginAPI.Core.Server.GetAllPlayersBanned
  name: GetAllPlayersBanned
  nameWithType: Server.GetAllPlayersBanned
  fullName: PluginAPI.Core.Server.GetAllPlayersBanned
- uid: BanDetails[]
  isExternal: true
  name: BanDetails[]
  nameWithType: BanDetails[]
  fullName: BanDetails[]
  nameWithType.vb: BanDetails()
  fullName.vb: BanDetails()
  name.vb: BanDetails()
  spec.csharp:
  - uid: BanDetails
    name: BanDetails
    nameWithType: BanDetails
    fullName: BanDetails
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BanDetails
    name: BanDetails
    nameWithType: BanDetails
    fullName: BanDetails
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BanHandler.BanType
  commentId: T:BanHandler.BanType
  isExternal: true
  name: BanHandler.BanType
  nameWithType: BanHandler.BanType
  fullName: BanHandler.BanType
- uid: PluginAPI.Core.Server.Restart*
  commentId: Overload:PluginAPI.Core.Server.Restart
  name: Restart
  nameWithType: Server.Restart
  fullName: PluginAPI.Core.Server.Restart
- uid: PluginAPI.Core.Server.Shutdown*
  commentId: Overload:PluginAPI.Core.Server.Shutdown
  name: Shutdown
  nameWithType: Server.Shutdown
  fullName: PluginAPI.Core.Server.Shutdown
- uid: CommandSender
  commentId: T:CommandSender
  isExternal: true
  name: CommandSender
  nameWithType: CommandSender
  fullName: CommandSender
- uid: PluginAPI.Core.Server.RunCommand*
  commentId: Overload:PluginAPI.Core.Server.RunCommand
  name: RunCommand
  nameWithType: Server.RunCommand
  fullName: PluginAPI.Core.Server.RunCommand
- uid: PluginAPI.Core.Server.SendBroadcast*
  commentId: Overload:PluginAPI.Core.Server.SendBroadcast
  name: SendBroadcast
  nameWithType: Server.SendBroadcast
  fullName: PluginAPI.Core.Server.SendBroadcast
- uid: Broadcast.BroadcastFlags
  commentId: T:Broadcast.BroadcastFlags
  isExternal: true
  name: Broadcast.BroadcastFlags
  nameWithType: Broadcast.BroadcastFlags
  fullName: Broadcast.BroadcastFlags
- uid: PluginAPI.Core.Server.ClearBroadcasts*
  commentId: Overload:PluginAPI.Core.Server.ClearBroadcasts
  name: ClearBroadcasts
  nameWithType: Server.ClearBroadcasts
  fullName: PluginAPI.Core.Server.ClearBroadcasts
- uid: PluginAPI.Core.Server.IdleModeActive*
  commentId: Overload:PluginAPI.Core.Server.IdleModeActive
  name: IdleModeActive
  nameWithType: Server.IdleModeActive
  fullName: PluginAPI.Core.Server.IdleModeActive
- uid: PluginAPI.Core.Server.PauseIdleMode*
  commentId: Overload:PluginAPI.Core.Server.PauseIdleMode
  name: PauseIdleMode
  nameWithType: Server.PauseIdleMode
  fullName: PluginAPI.Core.Server.PauseIdleMode
- uid: PluginAPI.Core.Server.IdleModeAvailable*
  commentId: Overload:PluginAPI.Core.Server.IdleModeAvailable
  name: IdleModeAvailable
  nameWithType: Server.IdleModeAvailable
  fullName: PluginAPI.Core.Server.IdleModeAvailable
- uid: PluginAPI.Core.Server.SetIdleMode*
  commentId: Overload:PluginAPI.Core.Server.SetIdleMode
  name: SetIdleMode
  nameWithType: Server.SetIdleMode
  fullName: PluginAPI.Core.Server.SetIdleMode
